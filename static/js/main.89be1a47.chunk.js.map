{"version":3,"sources":["components/DayDropdown.js","components/AddEventDialog.js","components/SettingsDialog.js","components/Modal.js","components/NavBar.js","components/EventList.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["WeekDays","DayDropdown","props","setDay","day","changeDay","toggleOpen","state","open","this","setState","className","onClick","bind","dayOfWeek","map","Component","AddEventDialog","updateText","event","newState","showDialog","inputText","target","value","newEvent","title","eventAdd","onChange","addToList","SettingsDialog","eventClear","Modal","openModal","closeModal","NavBar","openDialog","type","openAddEvent","openSettings","EventList","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","allEvents","push","id","Calendar","jsonEvents","localStorage","getItem","addEvent","item","Events","some","curr","alert","newList","setItem","JSON","stringify","parse","removeItem","clearEvents","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.89be1a47.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst WeekDays = [\r\n    'Sunday', 'Monday', 'Tuesday',\r\n    'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n];\r\n\r\nclass DayDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    toggleOpen() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    setDay = (day) => {\r\n        this.props.changeDay(day);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='drop-container'>\r\n                <button className='drop-open top-level' onClick={this.toggleOpen.bind(this)}> {this.props.dayOfWeek} </button>\r\n                {\r\n                    this.state.open ? (\r\n                        <ul className='dropdown'>\r\n                            {WeekDays.map(\r\n                                (day) => (day === this.props.dayOfWeek ? null :\r\n                                    <button\r\n                                        key={day}\r\n                                        className='drop-open'\r\n                                        onClick={() => this.setDay(day)}>\r\n                                        {day}\r\n                                    </button>)\r\n                            )}\r\n                        </ul>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DayDropdown;","import React, { Component } from 'react';\r\nimport DayDropdown from './DayDropdown';\r\n\r\nclass AddEventDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: this.props.showDialog,\r\n            inputText: '',\r\n            dayOfWeek: 'Sunday',\r\n        }\r\n    }\r\n\r\n    addToList() {\r\n        let newEvent = {\r\n            title: this.state.inputText,\r\n            day: this.state.dayOfWeek\r\n        };\r\n        this.props.eventAdd(newEvent);\r\n        let newState = {\r\n            showDialog: this.state.showDialog,\r\n            inputText: '',\r\n            dayOfWeek: this.state.dayOfWeek\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n    updateText = (event) => {\r\n        let newState = {\r\n            showDialog: this.state.showDialog,\r\n            inputText: event.target.value,\r\n            dayOfWeek: this.state.dayOfWeek\r\n        }\r\n        this.setState(newState);\r\n    };\r\n\r\n    changeDay = (day) => {\r\n        let newState = {\r\n            showDialog: this.state.showDialog,\r\n            inputText: this.state.inputText,\r\n            dayOfWeek: day\r\n        }\r\n        this.setState(newState);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='addevents overlay rounded'>\r\n                        <DayDropdown\r\n                            changeDay={this.changeDay}\r\n                            dayOfWeek={this.state.dayOfWeek}>\r\n                        </DayDropdown>\r\n                        <div className='text-container'>\r\n                            <p> Name of Event: </p>\r\n                            <input\r\n                                onChange={this.updateText}\r\n                                value={this.state.inputText}>\r\n                            </input>\r\n                        </div>\r\n                        <button\r\n                            className='contrast add-button'\r\n                            onClick={this.addToList.bind(this)}>\r\n                            Add Event\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddEventDialog;","import React, { Component } from 'react';\r\n\r\nclass SettingsDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: this.props.showDialog,\r\n            inputText: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='settings overlay rounded'>\r\n                        <p> Settings List! </p>\r\n                        <hr></hr>\r\n                        <li> 12 / 24 Hour Time </li>\r\n                        <li> Accent Color </li>\r\n                        <li> First Day of Week Sun / Mon </li>\r\n                        <button\r\n                            className='contrast'\r\n                            onClick={this.props.eventClear}>\r\n                            Clear Events\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsDialog;","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.openModal ?\r\n\r\n                    <div className='modal-bg'\r\n                        onClick={this.props.closeModal}>\r\n                    </div>\r\n\r\n                    : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport AddEventDialog from './AddEventDialog';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport Modal from './Modal';\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDialog: null\r\n        }\r\n    }\r\n\r\n    openAddEvent() {\r\n        // Check if any other dialog is open\r\n        if (this.state.openDialog) {\r\n            return;\r\n        }\r\n        let newState = {\r\n            openDialog: 'events'\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    openSettings() {\r\n        // Check if any other dialog is open\r\n        if (this.state.openDialog) {\r\n            return;\r\n        }\r\n        let newState = {\r\n            openDialog: 'settings'\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    closeModal() {\r\n        let newState = {\r\n            openDialog: null\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar' >\r\n                <button\r\n                    type='button'\r\n                    className='accent'\r\n                    onClick={this.openAddEvent.bind(this)}>\r\n                    Add Event\r\n                </button>\r\n                <p className='title'> Weeklies </p>\r\n                <button\r\n                    type='button'\r\n                    className='contrast settings-button'\r\n                    onClick={this.openSettings.bind(this)}>\r\n                    &#9881;\r\n                </button>\r\n\r\n                <Modal\r\n                    closeModal={this.closeModal.bind(this)}\r\n                    openModal={this.state.openDialog !== null}>\r\n                </Modal>\r\n                <AddEventDialog\r\n                    eventAdd={this.props.eventAdd}\r\n                    showDialog={this.state.openDialog === 'events'}>\r\n                </AddEventDialog>\r\n                <SettingsDialog\r\n                    eventClear={this.props.eventClear}\r\n                    showDialog={this.state.openDialog === 'settings'}>\r\n                </SettingsDialog>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass EventList extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        let Sunday = [];\r\n        let Monday = [];\r\n        let Tuesday = [];\r\n        let Wednesday = [];\r\n        let Thursday = [];\r\n        let Friday = [];\r\n        let Saturday = [];\r\n\r\n        this.props.allEvents.map((value) => (\r\n            value.day === 'Sunday' ?\r\n                Sunday.push(<li key={value.title}>{value.title}</li>) :\r\n                (value.day === 'Monday' ?\r\n                    Monday.push(<li key={value.title}>{value.title}</li>) :\r\n                    (value.day === 'Tuesday' ?\r\n                        Tuesday.push(<li key={value.title}>{value.title}</li>) :\r\n                        (value.day === 'Wednesday' ?\r\n                            Wednesday.push(<li key={value.title}>{value.title}</li>) :\r\n                            (value.day === 'Thursday' ?\r\n                                Thursday.push(<li key={value.title}>{value.title}</li>) :\r\n                                (value.day === 'Friday' ?\r\n                                    Friday.push(<li key={value.title}>{value.title}</li>) :\r\n                                    (value.day === 'Saturday' ?\r\n                                        Saturday.push(<li key={value.title}>{value.title}</li>) : null))))))\r\n        ))\r\n\r\n        return (\r\n            <div className='eventlist'>\r\n                <div className='column' id='Sunday'>\r\n                    <p> Sunday </p>\r\n                    <hr></hr>\r\n                    {Sunday}\r\n                </div>\r\n                <div className='column' id='Monday'>\r\n                    <p> Monday </p>\r\n                    <hr></hr>\r\n                    {Monday}\r\n                </div>\r\n                <div className='column' id='Tuesday'>\r\n                    <p> Tuesday </p>\r\n                    <hr></hr>\r\n                    {Tuesday}\r\n                </div>\r\n                <div className='column' id='Wednesday'>\r\n                    <p> Wednesday </p>\r\n                    <hr></hr>\r\n                    {Wednesday}\r\n                </div>\r\n                <div className='column' id='Thursday'>\r\n                    <p> Thursday </p>\r\n                    <hr></hr>\r\n                    {Thursday}\r\n                </div>\r\n                <div className='column' id='Friday'>\r\n                    <p> Friday </p>\r\n                    <hr></hr>\r\n                    {Friday}\r\n                </div>\r\n                <div className='column' id='Saturday'>\r\n                    <p> Saturday </p>\r\n                    <hr></hr>\r\n                    {Saturday}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport EventList from './EventList';\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        let jsonEvents = localStorage.getItem('weeklies-events');\r\n        super(props);\r\n        this.state = {\r\n            Events: (jsonEvents ? JSON.parse(jsonEvents) : [])\r\n        };\r\n    }\r\n\r\n    addEvent = (item) => {\r\n        if (item.title === '') {\r\n            alert('Event title cannot be empty!');\r\n            return;\r\n        }\r\n        if (this.state.Events.some(\r\n            curr => curr.title === item.title && curr.day === item.day)) {\r\n            alert(\"Cannot add duplicate event!\");\r\n            return;\r\n        }\r\n        let newList = this.state.Events\r\n        newList.push(item)\r\n        let newState = {\r\n            Events: newList\r\n        }\r\n        this.setState(newState);\r\n        localStorage.setItem('weeklies-events', JSON.stringify(this.state.Events));\r\n    };\r\n\r\n    clearEvents() {\r\n        localStorage.removeItem('weeklies-events');\r\n        let newState = {\r\n            Events: []\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='calendar'>\r\n                <NavBar\r\n                    eventAdd={this.addEvent.bind(this)}\r\n                    eventClear={this.clearEvents.bind(this)}>\r\n                </NavBar>\r\n                <hr></hr>\r\n                <EventList\r\n                    allEvents={this.state.Events}>\r\n                </EventList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Calendar from './components/Calendar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Calendar></Calendar>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}