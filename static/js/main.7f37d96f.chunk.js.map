{"version":3,"sources":["components/Data.js","img/github-mark.svg","img/gear.svg","components/NavBar.js","components/DayDropdown.js","components/HourDropdown.js","components/MinDropdown.js","components/AMDropdown.js","components/EventDialog.js","components/SettingsDialog.js","components/EventColumn.js","components/EventList.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["range","num","Array","from","length","x","i","colorNames","darkColors","lightColors","dayList","dayAbbrevList","NavBar","props","className","type","onClick","setDialog","href","target","rel","src","ghLogo","alt","gearLogo","DayDropdown","toggleOpen","setState","open","state","setDay","day","changeDay","this","map","Component","HourDropdown","setHour","hour","changeHour","HoursList","format","MinDropdown","changeMin","min","AMDropdown","changeAM","isAM","EventDialog","isOpen","style","zIndex","onChange","event","changeUpcoming","tempEvent","title","value","start","end","addEvent","editEvent","SettingsDialog","checked","toggleFormat","n","backgroundColor","accentColor","changeColor","clearEvents","EventColumn","numDay","monoDay","events","top","height","editUpcoming","id","slice","addUpcoming","scaleTime","EventList","setMono","allEvents","filter","Calendar","getList","localStorage","getItem","getInfo","addID","indexOf","newList","parseEvent","upcoming","push","sort","a","b","updateEvents","oldid","deleteEvent","list","alert","some","curr","newState","dialog","setItem","JSON","stringify","index","findIndex","time","name","setAccent","document","body","setProperty","accent","parse","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7f37d96f.chunk.js","sourcesContent":["const range = (num) => (\r\n    Array.from({ length: num }, (x, i) => i)\r\n);\r\n\r\nconst colorNames = [\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'green',\r\n    'skyblue',\r\n    'blue',\r\n    'purple'\r\n];\r\n\r\nconst darkColors = [\r\n    'rgb(234, 90, 71)',\r\n    'rgb(236, 140, 25)',\r\n    'rgb(223, 194, 50)',\r\n    'rgb(109, 207, 117)',\r\n    'rgb(79, 209, 220)',\r\n    'rgb(103, 139, 255)',\r\n    'rgb(167, 99, 219)',\r\n    'rgb(103, 139, 255)'\r\n];\r\n\r\nconst lightColors = [\r\n    'rgb(250, 154, 141)',\r\n    'rgb(242, 183, 113)',\r\n    'rgb(241, 218, 100)',\r\n    'rgb(172, 233, 178)',\r\n    'rgb(146, 236, 243)',\r\n    'rgb(167, 188, 255)',\r\n    'rgb(205, 169, 234)',\r\n    'rgb(103, 139, 255)'\r\n];\r\n\r\nconst dayList = [\r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday',\r\n    'Thursday', 'Friday', 'Saturday'\r\n];\r\n\r\nconst dayAbbrevList = [\r\n    'SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'\r\n]\r\n\r\nexport {\r\n    range, colorNames,\r\n    darkColors, lightColors,\r\n    dayList, dayAbbrevList\r\n};","export default __webpack_public_path__ + \"static/media/github-mark.6fa18895.svg\";","export default __webpack_public_path__ + \"static/media/gear.1605e791.svg\";","import React from 'react';\r\nimport ghLogo from '../img/github-mark.svg';\r\nimport gearLogo from '../img/gear.svg';\r\n\r\nconst NavBar = props => (\r\n    <div className='navbar' >\r\n        <button\r\n            type='button'\r\n            className='accent'\r\n            onClick={() => props.setDialog('add')}>\r\n            Add Event\r\n        </button>\r\n        <p className='title rounded'> Weeklies </p>\r\n        <div className='subbar'>\r\n            <a\r\n                href='https://github.com/blloop/weeklies'\r\n                target='_blank'\r\n                rel='noopener noreferrer'>\r\n                <img\r\n                    src={ghLogo}\r\n                    alt='GitHub Link'\r\n                    className='logo'>\r\n                </img>\r\n            </a>\r\n            <button\r\n                type='button'\r\n                className='contrast settings-button'\r\n                onClick={() => props.setDialog('settings')}>\r\n                <img\r\n                    src={gearLogo}\r\n                    alt='Settings Button'>\r\n                </img>\r\n            </button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { dayList } from './Data';\r\n\r\nclass DayDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setDay = (day) => {\r\n        this.props.changeDay(day);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square'\r\n                    onClick={this.toggleOpen}>\r\n                    {this.props.day}\r\n                </button>\r\n                {\r\n                    this.state.open ? (\r\n                        <ul className='dropdown'>\r\n                            {dayList.map((day) =>\r\n                                <button\r\n                                    key={day}\r\n                                    className='drop-box square'\r\n                                    onClick={() => this.setDay(day)}>\r\n                                    {day}\r\n                                </button>\r\n                            )}\r\n                        </ul>\r\n                    ) : null\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayDropdown;","import React, { Component } from 'react';\r\n\r\nclass HourDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setHour = (hour) => {\r\n        this.props.changeHour(hour);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        let HoursList =\r\n            (this.props.format ? [\r\n                0, 1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12, 13, 14, 15,\r\n                16, 17, 18, 19, 20, 21, 22, 23\r\n            ] : [\r\n                1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12\r\n            ]);\r\n\r\n        return (\r\n            <div className='drop-container'>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.toggleOpen}>\r\n                    {this.props.format ?\r\n                        this.props.hour / 2 :\r\n                        (this.props.hour / 2) % 12 === 0 ?\r\n                            12 : (this.props.hour / 2) % 12\r\n                    }\r\n                </button>\r\n                {this.state.open ? (\r\n                    <ul className='dropdown wide'>\r\n                        {HoursList.map((hour) =>\r\n                            <button\r\n                                key={hour}\r\n                                className='drop-box square small'\r\n                                onClick={() => {\r\n                                    this.setHour(\r\n                                        this.props.format ?\r\n                                            hour :\r\n                                            (hour === 12 ? 0 : hour * 2) +\r\n                                            (this.props.hour < 24 ? 0 : 24)\r\n                                    )\r\n                                }}>\r\n                                {hour}\r\n                            </button>\r\n                        )}\r\n                    </ul>\r\n                ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HourDropdown;","import React from 'react';\r\n\r\nconst MinDropdown = props => (\r\n    <button\r\n        className='drop-box top-button square small'\r\n        onClick={props.changeMin}>\r\n        {props.min === 0 ? '00' : '30'}\r\n    </button>\r\n);\r\n\r\nexport default MinDropdown;","import React from 'react';\r\n\r\nconst AMDropdown = props => (\r\n    <>\r\n        {props.format ? null :\r\n            <button\r\n                className='drop-box top-button square small'\r\n                onClick={props.changeAM}>\r\n                {props.isAM ? 'AM' : 'PM'}\r\n            </button>\r\n        }\r\n    </>\r\n)\r\n\r\nexport default AMDropdown;","import React from 'react';\r\nimport DayDropdown from './DayDropdown';\r\nimport HourDropdown from './HourDropdown';\r\nimport MinDropdown from './MinDropdown';\r\nimport AMDropdown from './AMDropdown';\r\n\r\nconst EventDialog = props => (\r\n    <>\r\n        {props.isOpen &&\r\n            <>\r\n                <div\r\n                    className='modal-bg'\r\n                    style={{ zIndex: 12 }}\r\n                    onClick={() => props.setDialog(null)}>\r\n                </div>\r\n                <div className='addevents overlay rounded'>\r\n                    <p className='header rounded'>\r\n                        {props.type === 'add' ?\r\n                            'Add Event' :\r\n                            'Edit Event'\r\n                        }\r\n                    </p>\r\n                    <button\r\n                        onClick={() => props.setDialog(null)}\r\n                        className='close-button'>\r\n                        &#10005;\r\n                    </button>\r\n                    <div className='text-container'>\r\n                        <p> Name of Event: </p>\r\n                        <input\r\n                            onChange={(event) => props.changeUpcoming({\r\n                                ...props.tempEvent,\r\n                                title: event.target.value\r\n                            })}\r\n                            value={props.tempEvent.title}>\r\n                        </input>\r\n                    </div>\r\n                    <div className='row-items'>\r\n                        <DayDropdown\r\n                            changeDay={(day) => props.changeUpcoming({\r\n                                ...props.tempEvent,\r\n                                day: day\r\n                            })}\r\n                            day={props.tempEvent.day}>\r\n                        </DayDropdown>\r\n                        <div className='time-items'>\r\n                            <HourDropdown\r\n                                changeHour={(hour) => props.changeUpcoming({\r\n                                    ...props.tempEvent,\r\n                                    start:\r\n                                        hour +\r\n                                        (props.tempEvent.start % 2)\r\n                                })}\r\n                                hour={\r\n                                    props.tempEvent.start -\r\n                                    (props.tempEvent.start % 2)\r\n                                }\r\n                                format={props.format}>\r\n                            </HourDropdown>\r\n                            <MinDropdown\r\n                                changeMin={() => props.changeUpcoming({\r\n                                    ...props.tempEvent,\r\n                                    start:\r\n                                        (props.tempEvent.start % 2 === 0 ?\r\n                                            props.tempEvent.start + 1 :\r\n                                            props.tempEvent.start - 1) % 48\r\n                                })}\r\n                                min={\r\n                                    props.tempEvent.start % 2\r\n                                }>\r\n                            </MinDropdown>\r\n                            <AMDropdown\r\n                                changeAM={() => props.changeUpcoming({\r\n                                    ...props.tempEvent,\r\n                                    start: (props.tempEvent.start + 24) % 48\r\n                                })}\r\n                                isAM={props.tempEvent.start < 24}\r\n                                format={props.format}>\r\n                            </AMDropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div className='time-items'>\r\n                        <HourDropdown\r\n                            changeHour={(hour) => props.changeUpcoming({\r\n                                ...props.tempEvent,\r\n                                end:\r\n                                    hour +\r\n                                    (props.tempEvent.end % 2)\r\n                            })}\r\n                            hour={\r\n                                props.tempEvent.end -\r\n                                (props.tempEvent.end % 2)\r\n                            }\r\n                            format={props.format}>\r\n                        </HourDropdown>\r\n                        <MinDropdown\r\n                            changeMin={() => props.changeUpcoming({\r\n                                ...props.tempEvent,\r\n                                end:\r\n                                    (props.tempEvent.end % 2 === 0 ?\r\n                                        props.tempEvent.end + 1 :\r\n                                        props.tempEvent.end - 1) % 48\r\n                            })}\r\n                            min={\r\n                                props.tempEvent.end % 2\r\n                            }>\r\n                        </MinDropdown>\r\n                        <AMDropdown\r\n                            changeAM={() => props.changeUpcoming({\r\n                                ...props.tempEvent,\r\n                                end: (props.tempEvent.end + 24) % 48\r\n                            })}\r\n                            isAM={props.tempEvent.end < 24}\r\n                            format={props.format}>\r\n                        </AMDropdown>\r\n                    </div>\r\n                    {\r\n                        props.type === 'add' ?\r\n                            <button\r\n                                className='contrast-light thin-button'\r\n                                onClick={props.addEvent}>\r\n                                Add Event\r\n                            </button> :\r\n                            <button\r\n                                className='contrast-light thin-button'\r\n                                onClick={props.editEvent}>\r\n                                Edit Event\r\n                            </button>\r\n                    }\r\n                </div>\r\n            </>\r\n        }\r\n    </>\r\n);\r\n\r\nexport default EventDialog;","import React from 'react';\r\nimport { colorNames, darkColors, range } from './Data';\r\n\r\nconst SettingsDialog = props => (\r\n    <>\r\n        {props.isOpen &&\r\n            <>\r\n                <div\r\n                    className='modal-bg'\r\n                    style={{ zIndex: 12 }}\r\n                    onClick={() => props.setDialog(null)}>\r\n                </div>\r\n                <div className='settings overlay rounded'>\r\n                    <button\r\n                        onClick={() => props.setDialog(null)}\r\n                        className='close-button'>\r\n                        &#10005;\r\n                    </button>\r\n                    <p className='subtitle'> Settings </p>\r\n                    <hr></hr>\r\n                    <div className='settings-row'>\r\n                        <p> Use 24 Hour Time </p>\r\n                        <input\r\n                            type={'checkbox'}\r\n                            checked={props.format}\r\n                            onChange={props.toggleFormat}>\r\n                        </input>\r\n                    </div>\r\n                    <div className='settings-row'>\r\n                        <p> Accent Color: </p>\r\n                        <div className='color-palette'>\r\n                            {range(colorNames.length).map((n) =>\r\n                                <div\r\n                                    key={n}\r\n                                    style={{\r\n                                        backgroundColor: darkColors[n]\r\n                                    }}\r\n                                    className={\r\n                                        props.accentColor ===\r\n                                            colorNames[n] ?\r\n                                            'current-color' :\r\n                                            ''\r\n                                    }\r\n                                    checked={\r\n                                        props.accentColor ===\r\n                                        colorNames[n]\r\n                                    }\r\n                                    onClick={() =>\r\n                                        props.changeColor(n)\r\n                                    }>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        className='contrast thin-button'\r\n                        onClick={props.clearEvents}>\r\n                        Clear Events\r\n                    </button>\r\n                </div>\r\n            </>\r\n        }\r\n    </>\r\n)\r\n\r\nexport default SettingsDialog;","import { range, dayList, dayAbbrevList } from \"./Data\";\r\n\r\nconst EventColumn = props => (\r\n    <div className={'column' +\r\n        (props.numDay === props.monoDay ?\r\n            '' : ' mono-hide')\r\n    }>\r\n        <p className='subtitle'>{dayAbbrevList[props.numDay]}</p>\r\n        <hr></hr>\r\n        {props.events.map((event) => {\r\n            return (\r\n                <div\r\n                    style={{\r\n                        top: 60 +\r\n                            (event.start * 25),\r\n                        height:\r\n                            (event.end - event.start) * 25\r\n                    }}\r\n                    className={'event'}\r\n                    onClick={() => props.editUpcoming(event.id)}\r\n                    key={event.id}>\r\n                    <p> {event.title.length > 25 ?\r\n                        event.title.slice(0, 25) + '...' :\r\n                        event.title}\r\n                    </p>\r\n                </div>\r\n            );\r\n        })}\r\n        {range(48).map(num => (\r\n            <div\r\n                key={num}\r\n                onClick={() =>\r\n                    props.addUpcoming(\r\n                        dayList[props.numDay], num\r\n                    )\r\n                }\r\n                className='selection'\r\n                style={{ top: 60 + (num * 25) }}>\r\n            </div >\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default EventColumn;","import React from 'react';\r\nimport EventColumn from './EventColumn';\r\nimport { dayList, range } from './Data';\r\n\r\nlet scaleTime = (format) => {\r\n    return (\r\n        format ?\r\n            <>\r\n                <p>00:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n                <p>12:00</p><p>13:00</p><p>14:00</p><p>15:00</p>\r\n                <p>16:00</p><p>17:00</p><p>18:00</p><p>19:00</p>\r\n                <p>20:00</p><p>21:00</p><p>22:00</p><p>23:00</p>\r\n            </> :\r\n            <>\r\n                <p>12:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n                <p>12:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n            </>\r\n    );\r\n}\r\n\r\nconst EventList = props => (\r\n    <div className='eventlist'>\r\n        <div className='time-scale scale-left mono-hide'>\r\n            {scaleTime(props.format)}\r\n        </div>\r\n        <div className='grid-lines'>\r\n            {range(47).map(num => { return (<hr key={num}></hr>) })}\r\n        </div>\r\n        <div className='column utility mono-show'>\r\n            <button\r\n                onClick={() =>\r\n                    props.setMono((props.monoDay - 1) % 7)\r\n                }\r\n                className='switch move-left'>\r\n                &lt;\r\n            </button> {/* < */}\r\n            <button\r\n                onClick={() =>\r\n                    props.setMono((props.monoDay + 1) % 7)\r\n                }\r\n                className='switch move-right'>\r\n                &gt;\r\n            </button> {/* > */}\r\n            <div className='time-scale scale-left'>\r\n                {scaleTime(props.format)}\r\n            </div>\r\n        </div>\r\n        {range(7).map((num) =>\r\n            <EventColumn\r\n                key={num}\r\n                addUpcoming={props.addUpcoming}\r\n                editUpcoming={props.editUpcoming}\r\n                monoDay={props.monoDay}\r\n                numDay={num}\r\n                events={props.allEvents.filter(\r\n                    event => event.day === dayList[num]\r\n                )}></EventColumn>\r\n        )}\r\n        <div className='time-scale scale-right mono-hide'>\r\n            {scaleTime(props.format)}\r\n        </div>\r\n    </div >\r\n);\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport { colorNames, dayList } from './Data';\r\nimport { lightColors, darkColors } from './Data';\r\nimport NavBar from './NavBar';\r\nimport EventDialog from './EventDialog';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport EventList from './EventList';\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        // Import weeklies data from browser storage\r\n        let getList = localStorage.getItem('weeklies');\r\n        let getInfo = localStorage.getItem('weeklies-info');\r\n        super(props);\r\n        this.state = {\r\n            events: (getList ?\r\n                JSON.parse(getList) : []\r\n            ),\r\n            accent: (getInfo ?\r\n                JSON.parse(getInfo)['accent'] : 'orange'\r\n            ),\r\n            format: (getInfo ?\r\n                JSON.parse(getInfo)['format'] : false\r\n            ),\r\n            upcoming: {\r\n                title: '',\r\n                day: 'Sunday',\r\n                start: 0,\r\n                end: 0\r\n            },\r\n            oldid: 0,\r\n            dialog: null,\r\n            monoDay: 0\r\n        };\r\n    }\r\n\r\n    // Update UI accent color upon page load\r\n    componentDidMount() {\r\n        this.setAccent(\r\n            colorNames.indexOf(this.state.accent)\r\n        );\r\n    }\r\n\r\n    // Calculates event ID based on start time\r\n    // Returns the event with ID\r\n    addID = (event) => {\r\n        return {\r\n            ...event,\r\n            end: event.end === 0 ? 48 : event.end,\r\n            id: (dayList.indexOf(event.day) * 48) +\r\n                event.start\r\n        };\r\n    }\r\n\r\n    // Add upcoming event to calendar\r\n    // Checks for valid argument and checks for overlap\r\n    addEvent = () => {\r\n        let newList = this.state.events;\r\n        if (this.parseEvent(\r\n            this.state.upcoming, this.state.events\r\n        )) {\r\n            newList.push(this.addID(this.state.upcoming));\r\n            newList.sort((a, b) => a.id - b.id);\r\n            this.updateEvents(newList);\r\n        };\r\n    }\r\n\r\n    // Edit event in calendar\r\n    // Removes old event and adds in new one\r\n    editEvent = () => {\r\n        let newList = this.state.events.filter(\r\n            event => event.id !== this.state.oldid\r\n        );\r\n        if (this.parseEvent(\r\n            this.state.upcoming, newList\r\n        )) {\r\n            newList.push(this.addID(this.state.upcoming));\r\n            newList.sort((a, b) => a.id - b.id);\r\n            this.updateEvents(newList);\r\n        };\r\n    }\r\n\r\n    // Remove event from calendar\r\n    // Filters event list by ID\r\n    deleteEvent = (id) => {\r\n        let newList = this.state.events.filter(\r\n            event => event.id !== id\r\n        );\r\n        this.updateEvents(newList);\r\n    }\r\n\r\n    // Remove all events from calendar\r\n    clearEvents = () => {\r\n        this.updateEvents([]);\r\n    }\r\n\r\n    // Helper method that verifies an\r\n    // event can be added to the calendar\r\n    parseEvent = (event, list) => {\r\n        if (!event.title || event.title.length === 0) {\r\n            alert('Event title cannot be empty!');\r\n            return false;\r\n        };\r\n        if ((event.start > event.end && event.end !== 0) ||\r\n            event.start === event.end) {\r\n            alert(\"Invalid event duration!\");\r\n            return false;\r\n        };\r\n        if (list.some(\r\n            curr =>\r\n            ((curr.day === event.day) &&\r\n                ((curr.start === event.start ||\r\n                    curr.end === event.end) ||\r\n                    (curr.start < event.end &&\r\n                        curr.end > event.start) ||\r\n                    (curr.end > event.start &&\r\n                        curr.start < event.end)))\r\n        )) {\r\n            alert(\"Event overlaps with a current event!\");\r\n            return false;\r\n        };\r\n        return true;\r\n    }\r\n\r\n    // Helper method that updates events\r\n    // and saves to local browser storage\r\n    updateEvents = (list) => {\r\n        let newState = {\r\n            ...this.state,\r\n            events: list,\r\n            dialog: null\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(list)\r\n        );\r\n    }\r\n\r\n    // Imports event selection data\r\n    // into the edit event dialog\r\n    editUpcoming = (id) => {\r\n        let index = this.state.events.findIndex(\r\n            event => event.id === id\r\n        );\r\n        let newState = {\r\n            ...this.state,\r\n            oldid: id,\r\n            upcoming: {\r\n                title: this.state.events[index].title,\r\n                day: this.state.events[index].day,\r\n                start: this.state.events[index].start,\r\n                end: this.state.events[index].end\r\n            },\r\n            dialog: 'edit'\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets selected time slot to be displayed\r\n    // in the add event dialog\r\n    addUpcoming = (day, time) => {\r\n        let newState = {\r\n            ...this.state,\r\n            upcoming: {\r\n                title: '',\r\n                day: day,\r\n                start: time,\r\n                end: (time + 2) % 48\r\n            },\r\n            dialog: 'add'\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Updates the upcoming event details\r\n    // for the add and edit event dialogs\r\n    changeUpcoming = (event) => {\r\n        let newState = {\r\n            ...this.state,\r\n            upcoming: event\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Changes the open dialog by name\r\n    // Can be passed null as a valid value\r\n    setDialog = (name) => {\r\n        let newState = {\r\n            ...this.state,\r\n            dialog: name\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Updates the selected day in a mono-view\r\n    // for smaller screens\r\n    setMono = (num) => {\r\n        let newState = {\r\n            ...this.state,\r\n            monoDay: num\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Set accent color\r\n    setAccent = (index) => {\r\n        document.body.style.setProperty(\r\n            '--light-accent', lightColors[index]\r\n        );\r\n        document.body.style.setProperty(\r\n            '--dark-accent', darkColors[index]\r\n        );\r\n        let newState = {\r\n            ...this.state,\r\n            accent: colorNames[index]\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies-info',\r\n            JSON.stringify({\r\n                accent: newState.accent,\r\n                format: newState.format\r\n            })\r\n        );\r\n    }\r\n\r\n    // Toggle military time usage (24 hour time)\r\n    toggleFormat = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            format: !this.state.format\r\n        }\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies-info',\r\n            JSON.stringify({\r\n                accent: newState.accent,\r\n                format: newState.format\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.upcoming)\r\n        return (\r\n            <div className='calendar'>\r\n                <NavBar\r\n                    setDialog={this.setDialog}>\r\n                </NavBar>\r\n                <EventDialog\r\n                    type={'add'}\r\n                    addEvent={this.addEvent}\r\n                    tempEvent={this.state.upcoming}\r\n                    changeUpcoming={this.changeUpcoming}\r\n                    isOpen={this.state.dialog === 'add'}\r\n                    setDialog={this.setDialog}\r\n                    format={this.state.format}>\r\n                </EventDialog>\r\n                <EventDialog\r\n                    type={'edit'}\r\n                    addEvent={this.addEvent}\r\n                    editEvent={this.editEvent}\r\n                    deleteEvent={this.deleteEvent}\r\n                    tempEvent={this.state.upcoming}\r\n                    changeUpcoming={this.changeUpcoming}\r\n                    isOpen={this.state.dialog === 'edit'}\r\n                    setDialog={this.setDialog}\r\n                    format={this.state.format}>\r\n                </EventDialog>\r\n                <SettingsDialog\r\n                    clearEvents={this.clearEvents}\r\n                    isOpen={this.state.dialog === 'settings'}\r\n                    setDialog={this.setDialog}\r\n                    accentColor={this.state.accentColor}\r\n                    changeColor={this.setAccent}\r\n                    format={this.state.format}\r\n                    toggleFormat={this.toggleFormat}>\r\n                </SettingsDialog>\r\n                <EventList\r\n                    allEvents={this.state.events}\r\n                    addUpcoming={this.addUpcoming}\r\n                    editUpcoming={this.editUpcoming}\r\n                    monoDay={this.state.monoDay}\r\n                    setMono={this.setMono}\r\n                    setDialog={this.setDialog}\r\n                    format={this.state.format}>\r\n                </EventList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\nimport Calendar from './components/Calendar';\nimport './Modal.css';\nimport './index.css';\nimport './NavBar.css';\nimport './EventList.css';\n\nfunction App() {\n  return (\n    <Calendar></Calendar>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}