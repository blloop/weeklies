{"version":3,"sources":["img/github-mark.svg","img/gear.svg","components/Data.js","components/DayDropdown.js","components/HourDropdown.js","components/MinDropdown.js","components/ToggleAM.js","components/AddEventDialog.js","components/SettingsDialog.js","components/Modal.js","components/NavBar.js","components/EditEventDialog.js","components/EventList.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["colorNames","darkColors","lightColors","dayList","DayDropdown","props","toggleOpen","setState","open","state","setDay","day","changeDay","className","onClick","this","dayOfWeek","map","Component","HourDropdown","setHour","hour","changeHour","HoursList","useMilitary","currHour","newHour","isAM","MinDropdown","changeMin","isZero","ToggleAM","changeAM","AddEventDialog","addToList","newEvent","id","indexOf","title","inputText","min","hour2","newHour2","isZero2","min2","addEvent","updateText","event","newState","target","value","changeHour2","changeMin2","changeAM2","showDialog","closeModal","onChange","SettingsDialog","type","checked","toggleMilitary","style","backgroundColor","accentColor","changeColor","eventClear","Modal","openModal","NavBar","openAddEvent","openDialog","openSettings","href","rel","src","ghLogo","alt","gearLogo","EditEventDialog","tempEvent","setNewEvent","editEvent","deleteEvent","scaleTime","EventList","val","currDay","openPopup","oldEvent","formatEvent","top","height","length","slice","Sunday","allEvents","filter","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Calendar","jsonInfo","localStorage","getItem","addHelper","list","alert","some","curr","push","sort","a","b","newList","events","setItem","JSON","stringify","oldID","currEvent","eventID","clearEvents","num","document","body","setProperty","parse","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d0371c5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-mark.6fa18895.svg\";","export default __webpack_public_path__ + \"static/media/gear.1605e791.svg\";","const colorNames = [\r\n    'red',\r\n    'green',\r\n    'blue',\r\n    'yellow'\r\n];\r\n\r\nconst darkColors = [\r\n    'rgb(255, 89, 89)',\r\n    'rgb(97, 218, 73)',\r\n    'rgb(103, 139, 255)',\r\n    'rgb(223, 194, 50)'\r\n];\r\n\r\nconst lightColors = [\r\n    'rgb(255, 158, 158)',\r\n    'rgb(157 241 140)',\r\n    'rgb(167 188 255)',\r\n    'rgb(241, 218, 100)'\r\n];\r\n\r\nconst dayList = [\r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday',\r\n    'Thursday', 'Friday', 'Saturday'\r\n];\r\n\r\nexport { colorNames, darkColors, lightColors, dayList };","import React, { Component } from 'react';\r\nimport { dayList } from './Data';\r\n\r\nclass DayDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setDay = (day) => {\r\n        this.props.changeDay(day);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square'\r\n                    onClick={this.toggleOpen}>\r\n                    {this.props.dayOfWeek}\r\n                </button>\r\n                {\r\n                    this.state.open ? (\r\n                        <ul className='dropdown'>\r\n                            {dayList.map((day) =>\r\n                                <button\r\n                                    key={day}\r\n                                    className='drop-box square'\r\n                                    onClick={() => this.setDay(day)}>\r\n                                    {day}\r\n                                </button>\r\n                            )}\r\n                        </ul>\r\n                    ) : null\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayDropdown;","import React, { Component } from 'react';\r\n\r\nclass HourDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setHour = (hour) => {\r\n        this.props.changeHour(hour);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        let HoursList =\r\n            (this.props.useMilitary ? [\r\n                0, 1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12, 13, 14, 15,\r\n                16, 17, 18, 19, 20, 21, 22, 23\r\n            ] : [\r\n                1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12\r\n            ]);\r\n\r\n        let currHour = (this.props.useMilitary ?\r\n            this.props.newHour :\r\n            (this.props.newHour % 12 === 0 ?\r\n                12 :\r\n                this.props.newHour % 12\r\n            ));\r\n\r\n        return (\r\n            <div className='drop-container'>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.toggleOpen}>\r\n                    {currHour}\r\n                </button>\r\n                {this.state.open ? (\r\n                    <ul className='dropdown wide'>\r\n                        {HoursList.map((hour) =>\r\n                            <button\r\n                                key={hour}\r\n                                className='drop-box square small'\r\n                                onClick={() => {\r\n                                    this.setHour(\r\n                                        this.props.useMilitary ?\r\n                                            hour :\r\n                                            (hour === 12 ? 0 : hour) +\r\n                                            (this.props.isAM ? 0 : 12)\r\n                                    )\r\n                                }}>\r\n                                {hour}\r\n                            </button>\r\n                        )}\r\n                    </ul>\r\n                ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HourDropdown;","import React, { Component } from 'react';\r\n\r\nclass MinDropdown extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.props.changeMin}>\r\n                    {this.props.isZero ? '00' : '30'}\r\n                </button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinDropdown;","import React, { Component } from 'react';\r\n\r\nclass ToggleAM extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.useMilitary ? null :\r\n                    <button\r\n                        className='drop-box top-button square small'\r\n                        onClick={this.props.changeAM}>\r\n                        {this.props.isAM ? 'AM' : 'PM'}\r\n                    </button>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToggleAM;","import React, { Component } from 'react';\r\nimport DayDropdown from './DayDropdown';\r\nimport HourDropdown from './HourDropdown';\r\nimport MinDropdown from './MinDropdown';\r\nimport ToggleAM from './ToggleAM';\r\n\r\nlet dayList = [\r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday',\r\n    'Thursday', 'Friday', 'Saturday'\r\n]\r\n\r\nclass AddEventDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: this.props.showDialog,\r\n            inputText: '',\r\n            dayOfWeek: 'Sunday',\r\n            newHour: 0,\r\n            isZero: true,\r\n            newHour2: 0,\r\n            isZero2: true\r\n        };\r\n    }\r\n\r\n    // Add an event to dialog\r\n    // Sends request to top level component\r\n    addToList = () => {\r\n        let eventID =\r\n            (dayList.indexOf(this.state.dayOfWeek) * 48) +\r\n            this.state.newHour * 2 +\r\n            (this.state.isZero ? 0 : 1);\r\n        let newEvent = {\r\n            id: eventID,\r\n            title: this.state.inputText,\r\n            day: this.state.dayOfWeek,\r\n            hour: this.state.newHour,\r\n            min: (this.state.isZero ? 0 : 30),\r\n            hour2: (\r\n                (this.state.newHour2 === 0\r\n                    && this.state.newHour > this.state.newHour2\r\n                    && this.state.isZero2) ?\r\n                    24 :\r\n                    this.state.newHour2\r\n            ),\r\n            min2: (this.state.isZero2 ? 0 : 30)\r\n        };\r\n        this.props.addEvent(newEvent);\r\n    }\r\n\r\n    // Updates value of text field\r\n    // and stores as part of state\r\n    updateText = (event) => {\r\n        let newState = {\r\n            ...this.state,\r\n            inputText: event.target.value\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Set event to specified day of week\r\n    changeDay = (day) => {\r\n        let newState = {\r\n            ...this.state,\r\n            dayOfWeek: day\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current hour of event start time\r\n    changeHour = (hour) => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour: hour\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current minute of event start time\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            isZero: !this.state.isZero\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current state of the hour (AM/PM)\r\n    // for the event start time\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour: (this.state.newHour < 12 ?\r\n                this.state.newHour + 12 :\r\n                this.state.newHour - 12\r\n            )\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n\r\n    // Sets current hour of event end time\r\n    changeHour2 = (hour) => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour2: hour\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current minute of event end time\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin2 = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            isZero2: !this.state.isZero2\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current state of the hour (AM/PM)\r\n    // for the event end time\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM2 = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour2: (this.state.newHour2 < 12 ?\r\n                this.state.newHour2 + 12 :\r\n                this.state.newHour2 - 12\r\n            )\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='addevents overlay rounded'>\r\n                        <p className='header rounded'> Add Event </p>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <div className='text-container'>\r\n                            <p> Name of Event: </p>\r\n                            <input\r\n                                onChange={this.updateText}\r\n                                value={this.state.inputText}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='row-items'>\r\n                            <DayDropdown\r\n                                changeDay={this.changeDay}\r\n                                dayOfWeek={this.state.dayOfWeek}>\r\n                            </DayDropdown>\r\n                            <div className='time-items'>\r\n                                <HourDropdown\r\n                                    changeHour={this.changeHour}\r\n                                    isAM={this.state.newHour < 12}\r\n                                    newHour={this.state.newHour}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </HourDropdown>\r\n                                <MinDropdown\r\n                                    isZero={this.state.isZero}\r\n                                    changeMin={this.changeMin}>\r\n                                </MinDropdown>\r\n                                <ToggleAM\r\n                                    changeAM={this.changeAM}\r\n                                    isAM={this.state.newHour < 12}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </ToggleAM>\r\n                            </div>\r\n                        </div>\r\n                        <div className='time-items'>\r\n                            <HourDropdown\r\n                                changeHour={this.changeHour2}\r\n                                isAM={this.state.newHour2 < 12}\r\n                                newHour={this.state.newHour2}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </HourDropdown>\r\n                            <MinDropdown\r\n                                isZero={this.state.isZero2}\r\n                                changeMin={this.changeMin2}>\r\n                            </MinDropdown>\r\n                            <ToggleAM\r\n                                changeAM={this.changeAM2}\r\n                                isAM={this.state.newHour2 < 12}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </ToggleAM>\r\n                        </div>\r\n                        <button\r\n                            className='contrast-light thin-button'\r\n                            onClick={this.addToList}>\r\n                            Add Event\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddEventDialog;","import React, { Component } from 'react';\r\nimport { darkColors } from './Data';\r\n\r\nclass SettingsDialog extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='settings overlay rounded'>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <p className='subtitle'> Settings </p>\r\n                        <hr></hr>\r\n                        <div className='settings-row'>\r\n                            <p> Use 24 Hour Time </p>\r\n                            <input\r\n                                type={'checkbox'}\r\n                                checked={this.props.useMilitary}\r\n                                onChange={this.props.toggleMilitary}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='settings-row'>\r\n                            <p> Accent Color: </p>\r\n                            <div className='color-palette'>\r\n                                <div\r\n                                    style={{ backgroundColor: darkColors[0] }}\r\n                                    checked={this.props.accentColor === 'red'}\r\n                                    onClick={() => this.props.changeColor(0)}>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: darkColors[1] }}\r\n                                    checked={this.props.accentColor === 'green'}\r\n                                    onClick={() => this.props.changeColor(1)}>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: darkColors[2] }}\r\n                                    checked={this.props.accentColor === 'blue'}\r\n                                    onClick={() => this.props.changeColor(2)}>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: darkColors[3] }}\r\n                                    checked={this.props.accentColor === 'yellow'}\r\n                                    onClick={() => this.props.changeColor(3)}>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.props.eventClear}>\r\n                            Clear Events\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingsDialog;","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.openModal ?\r\n                    <div className='modal-bg'\r\n                        onClick={this.props.closeModal}>\r\n                    </div>\r\n                    : null}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport ghLogo from '../img/github-mark.svg';\r\nimport gearLogo from '../img/gear.svg';\r\nimport AddEventDialog from './AddEventDialog';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport Modal from './Modal';\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDialog: null\r\n        };\r\n    }\r\n\r\n    // Opens AddEvent dialog\r\n    openAddEvent = () => {\r\n        let newState = {\r\n            openDialog: 'events'\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Opens Settings dialog\r\n    openSettings = () => {\r\n        let newState = {\r\n            openDialog: 'settings'\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Closes all open dialogs\r\n    closeModal = () => {\r\n        let newState = {\r\n            openDialog: null\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar' >\r\n                <button\r\n                    type='button'\r\n                    className='accent'\r\n                    onClick={this.openAddEvent}>\r\n                    Add Event\r\n                </button>\r\n                <p className='title rounded'> Weeklies </p>\r\n                <div className='subbar'>\r\n                    <a\r\n                        href='https://github.com/blloop/weeklies'\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        <img\r\n                            src={ghLogo}\r\n                            alt='GitHub Link'\r\n                            className='logo'>\r\n                        </img>\r\n                    </a>\r\n                    <button\r\n                        type='button'\r\n                        className='contrast settings-button'\r\n                        onClick={this.openSettings}>\r\n                        <img\r\n                            src={gearLogo}\r\n                            alt='Settings Button'>\r\n                        </img>\r\n                    </button>\r\n                </div>\r\n\r\n                <Modal\r\n                    closeModal={this.closeModal}\r\n                    openModal={this.state.openDialog !== null}>\r\n                </Modal>\r\n                <AddEventDialog\r\n                    addEvent={this.props.addEvent}\r\n                    closeModal={this.closeModal}\r\n                    showDialog={this.state.openDialog === 'events'}\r\n                    useMilitary={this.props.useMilitary}>\r\n                </AddEventDialog>\r\n                <SettingsDialog\r\n                    eventClear={this.props.eventClear}\r\n                    closeModal={this.closeModal}\r\n                    showDialog={this.state.openDialog === 'settings'}\r\n                    accentColor={this.props.accentColor}\r\n                    changeColor={this.props.changeColor}\r\n                    useMilitary={this.props.useMilitary}\r\n                    toggleMilitary={this.props.toggleMilitary}>\r\n                </SettingsDialog>\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport DayDropdown from './DayDropdown';\r\nimport HourDropdown from './HourDropdown';\r\nimport MinDropdown from './MinDropdown';\r\nimport ToggleAM from './ToggleAM';\r\n\r\nclass EditEventDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: this.props.showDialog\r\n        };\r\n    }\r\n\r\n    // Updates value of text field\r\n    updateText = (event) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            inputText: event.target.value\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    };\r\n\r\n    // Set current value for day of the week\r\n    changeDay = (day) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            dayOfWeek: day\r\n        }\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current hour of event\r\n    changeHour = (hour) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour: hour\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current minute of event\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            isZero: !this.props.newEvent.isZero\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current state of the hour AM/PM\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour: (this.props.newEvent.newHour < 12 ?\r\n                this.props.newEvent.newHour + 12 :\r\n                this.props.newEvent.newHour - 12\r\n            )\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n\r\n    // Sets current hour of event #2\r\n    changeHour2 = (hour) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour2: hour\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current minute of event #2\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin2 = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            isZero2: !this.props.newEvent.isZero2\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current state of the hour AM/PM #2\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM2 = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour2: (this.props.newEvent.newHour2 < 12 ?\r\n                this.props.newEvent.newHour2 + 12 :\r\n                this.props.newEvent.newHour2 - 12\r\n            )\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='addevents overlay rounded'>\r\n                        <p className='header rounded'> Edit Event </p>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <div className='text-container'>\r\n                            <p> Name of Event: </p>\r\n                            <input\r\n                                onChange={this.updateText}\r\n                                value={this.props.newEvent.inputText}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='row-items'>\r\n                            <DayDropdown\r\n                                changeDay={this.changeDay}\r\n                                dayOfWeek={this.props.newEvent.dayOfWeek}>\r\n                            </DayDropdown>\r\n                            <div className='time-items'>\r\n                                <HourDropdown\r\n                                    changeHour={this.changeHour}\r\n                                    isAM={this.props.newEvent.newHour < 12}\r\n                                    newHour={this.props.newEvent.newHour}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </HourDropdown>\r\n                                <MinDropdown\r\n                                    isZero={this.props.newEvent.isZero}\r\n                                    changeMin={this.changeMin}>\r\n                                </MinDropdown>\r\n                                <ToggleAM\r\n                                    changeAM={this.changeAM}\r\n                                    isAM={this.props.newEvent.newHour < 12}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </ToggleAM>\r\n                            </div>\r\n                        </div>\r\n                        <div className='time-items'>\r\n                            <HourDropdown\r\n                                changeHour={this.changeHour2}\r\n                                isAM={this.props.newEvent.newHour2 < 12}\r\n                                newHour={this.props.newEvent.newHour2}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </HourDropdown>\r\n                            <MinDropdown\r\n                                isZero={this.props.newEvent.isZero2}\r\n                                changeMin={this.changeMin2}>\r\n                            </MinDropdown>\r\n                            <ToggleAM\r\n                                changeAM={this.changeAM2}\r\n                                isAM={this.props.newEvent.newHour2 < 12}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </ToggleAM>\r\n                        </div>\r\n                        <button\r\n                            className='contrast-light thin-button'\r\n                            onClick={this.props.editEvent}>\r\n                            Edit Event\r\n                        </button>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.props.deleteEvent}>\r\n                            Delete Event\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditEventDialog;","import React, { Component } from 'react';\r\nimport Modal from './Modal';\r\nimport EditEventDialog from './EditEventDialog';\r\nimport { dayList } from './Data';\r\n\r\n// Returns hourly intervals in a 12 hour span\r\n// Call twice for a full 24 hour span\r\nlet scaleTime = (useMilitary) => {\r\n    return (\r\n        useMilitary ?\r\n            <>\r\n                <p>00:00</p><p>01:00</p>\r\n                <p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p>\r\n                <p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p>\r\n                <p>10:00</p><p>11:00</p>\r\n                <p>12:00</p><p>13:00</p>\r\n                <p>14:00</p><p>15:00</p>\r\n                <p>16:00</p><p>17:00</p>\r\n                <p>18:00</p><p>19:00</p>\r\n                <p>20:00</p><p>21:00</p>\r\n                <p>22:00</p><p>23:00</p>\r\n            </> :\r\n            <>\r\n                <p>12:00</p><p>01:00</p>\r\n                <p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p>\r\n                <p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p>\r\n                <p>10:00</p><p>11:00</p>\r\n                <p>12:00</p><p>01:00</p>\r\n                <p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p>\r\n                <p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p>\r\n                <p>10:00</p><p>11:00</p>\r\n            </>\r\n    );\r\n}\r\n\r\nclass EventList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currDay: 0,\r\n            openDialog: false,\r\n            oldEvent: null,\r\n            newEvent: null\r\n        };\r\n    }\r\n\r\n    // Changes current day in mono view\r\n    changeDay = (val) => {\r\n        let newState = {\r\n            ...this.state,\r\n            currDay: (this.state.currDay + val === -1 ?\r\n                6 :\r\n                (this.state.currDay + val) % 7\r\n            )\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Opens open popup editor\r\n    // and prepares event values for edit tracking\r\n    openPopup = (event) => {\r\n        let eventID =\r\n            (dayList.indexOf(event.day) * 48) +\r\n            event.hour * 2 +\r\n            (event.min === 0 ? 0 : 1);\r\n        let tempEvent = {\r\n            id: eventID,\r\n            inputText: event.title,\r\n            dayOfWeek: event.day,\r\n            newHour: event.hour,\r\n            isZero: event.min === 0,\r\n            newHour2: event.hour2,\r\n            isZero2: event.min2 === 0\r\n        };\r\n        let newState = {\r\n            ...this.state,\r\n            openDialog: true,\r\n            oldEvent: tempEvent,\r\n            newEvent: tempEvent\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Closes popup editor\r\n    closeModal = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            openDialog: false,\r\n            oldEvent: null,\r\n            newEvent: null\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Calls for an event edit by passing\r\n    // in previous event and new event\r\n    editEvent = () => {\r\n        this.props.editEvent(\r\n            this.state.oldEvent.id,\r\n            this.state.newEvent\r\n        );\r\n    }\r\n\r\n    // Calls for an event to be deleted\r\n    // by passing oldEvent's id\r\n    deleteEvent = () => {\r\n        this.closeModal();\r\n        this.props.deleteEvent(this.state.oldEvent.id);\r\n    }\r\n\r\n    // Updates placeholder event to track\r\n    // new changes for upcoming event\r\n    setNewEvent = (event) => {\r\n        let tempEvent = {\r\n            inputText: event.inputText,\r\n            dayOfWeek: event.dayOfWeek,\r\n            newHour: event.newHour,\r\n            isZero: event.isZero,\r\n            newHour2: (\r\n                (event.newHour2 === 0\r\n                    && event.newHour > event.newHour2\r\n                    && event.isZero2) ?\r\n                    24 :\r\n                    event.newHour2\r\n            ),\r\n            isZero2: event.isZero2\r\n        };\r\n        let newState = {\r\n            ...this.state,\r\n            newEvent: tempEvent\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Positions events on calendar based on time\r\n    formatEvent = (event) => {\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: 60 +\r\n                        (event.hour * 50) +\r\n                        (event.min === 30 ? 25 : 0),\r\n                    height: ((\r\n                        (event.hour2 || 0) -\r\n                        (event.hour || 0)) * 50) +\r\n                        ((event.min || 0) >\r\n                            (event.min2 || 0) ? -25 : 0) +\r\n                        ((event.min || 0) <\r\n                            (event.min2 || 0) ? 25 : 0)\r\n                }}\r\n                className={'event'}\r\n                onClick={() => this.openPopup(event)}\r\n                key={event.id}>\r\n                <p> {event.title.length > 25 ?\r\n                    event.title.slice(0, 25) + '...' :\r\n                    event.title}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let Sunday = this.props.allEvents.filter(\r\n            event => event.day === 'Sunday'\r\n        );\r\n        let Monday = this.props.allEvents.filter(\r\n            event => event.day === 'Monday'\r\n        );\r\n        let Tuesday = this.props.allEvents.filter(\r\n            event => event.day === 'Tuesday'\r\n        );\r\n        let Wednesday = this.props.allEvents.filter(\r\n            event => event.day === 'Wednesday'\r\n        );\r\n        let Thursday = this.props.allEvents.filter(\r\n            event => event.day === 'Thursday'\r\n        );\r\n        let Friday = this.props.allEvents.filter(\r\n            event => event.day === 'Friday'\r\n        );\r\n        let Saturday = this.props.allEvents.filter(\r\n            event => event.day === 'Saturday'\r\n        );\r\n\r\n        return (\r\n            <div className='eventlist'>\r\n                <Modal\r\n                    closeModal={this.closeModal}\r\n                    openModal={this.state.openDialog}>\r\n                </Modal>\r\n                <EditEventDialog\r\n                    editEvent={this.editEvent}\r\n                    deleteEvent={this.deleteEvent}\r\n                    setNewEvent={this.setNewEvent}\r\n                    newEvent={this.state.newEvent}\r\n                    closeModal={this.closeModal}\r\n                    showDialog={this.state.openDialog}\r\n                    useMilitary={this.props.useMilitary}>\r\n                </EditEventDialog>\r\n                <div className='grid-lines'>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr><hr></hr>\r\n                    <hr></hr><hr></hr><hr></hr>\r\n                </div>\r\n                <div className='column utility mono-show'>\r\n                    <button\r\n                        onClick={() => this.changeDay(-1)}\r\n                        className='switch move-left'>\r\n                        &lt;\r\n                    </button> {/* < */}\r\n                    <button\r\n                        onClick={() => this.changeDay(1)}\r\n                        className='switch move-right'>\r\n                        &gt;\r\n                    </button> {/* > */}\r\n                    <div className='time-scale scale-left'>\r\n                        {scaleTime(this.props.useMilitary)}\r\n                    </div>\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 0 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <div className='time-scale scale-left mono-hide'>\r\n                        {scaleTime(this.props.useMilitary)}\r\n                    </div>\r\n                    <p className='subtitle'> SUN </p>\r\n                    <hr></hr>\r\n                    {Sunday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 1 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> MON </p>\r\n                    <hr></hr>\r\n                    {Monday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 2 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> TUE </p>\r\n                    <hr></hr>\r\n                    {Tuesday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 3 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> WED </p>\r\n                    <hr></hr>\r\n                    {Wednesday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 4 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> THU </p>\r\n                    <hr></hr>\r\n                    {Thursday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 5 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> FRI </p>\r\n                    <hr></hr>\r\n                    {Friday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 6 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> SAT </p>\r\n                    <hr></hr>\r\n                    {Saturday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                    <div className='time-scale scale-right mono-hide'>\r\n                        {scaleTime(this.props.useMilitary)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport EventList from './EventList';\r\nimport { colorNames, lightColors, darkColors, dayList } from './Data';\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        // Import weeklies data from browser storage\r\n        let jsonInfo = localStorage.getItem('weeklies');\r\n        super(props);\r\n        this.state = {\r\n            events: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['events'] :\r\n                []\r\n            ),\r\n            useMilitary: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['useMilitary'] :\r\n                false\r\n            ),\r\n            accentColor: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['accentColor'] :\r\n                'yellow'\r\n            )\r\n        };\r\n    }\r\n\r\n    // Update UI accent color upon page load\r\n    componentDidMount() {\r\n        this.changeColor(\r\n            (this.state.accentColor === 'red'\r\n                ? 0 :\r\n                this.state.accentColor === 'green'\r\n                    ? 1 :\r\n                    this.state.accentColor === 'blue'\r\n                        ? 2 :\r\n                        this.state.accentColor === 'yellow'\r\n                            ? 3 : 3\r\n            )\r\n        );\r\n    }\r\n\r\n    // Helper function to add event to list\r\n    addHelper = (list, event) => {\r\n        if (event.title.length === 0) {\r\n            alert('Event title cannot be empty!');\r\n            return -1;\r\n        };\r\n        if (event.hour2 < event.hour ||\r\n            (event.hour === event.hour2 &&\r\n                event.min >= event.min2)) {\r\n            alert(\"Event must occur for at least 30 min!\");\r\n            return -1;\r\n        };\r\n        if (list.some(\r\n            curr =>\r\n            ((curr.day === event.day) &&\r\n                ((\r\n                    (curr.hour === event.hour &&\r\n                        curr.min === event.min) ||\r\n                    (curr.hour2 === event.hour2 &&\r\n                        curr.min2 === event.min2)\r\n                ) ||\r\n                    ((curr.hour + (curr.min ? 0 : 0.5) <\r\n                        event.hour2 + (event.min2 ? 0 : 0.5) &&\r\n                        curr.hour2 + (curr.min2 ? 0 : 0.5) >\r\n                        event.hour + (event.min ? 0 : 0.5)) ||\r\n                        (curr.hour2 + (curr.min2 ? 0 : 0.5) >\r\n                            event.hour + (event.min ? 0 : 0.5) &&\r\n                            curr.hour + (curr.min ? 0 : 0.5) <\r\n                            event.hour + (event.min ? 0 : 0.5)))\r\n                ))\r\n        )) {\r\n            alert(\"Event overlaps with a current event!\");\r\n            return -1;\r\n        };\r\n        list.push(event);\r\n        list.sort((a, b) => a.id - b.id);\r\n        return 0;\r\n    }\r\n\r\n    // Add an event to calendar\r\n    addEvent = (event) => {\r\n        let newList = this.state.events;\r\n        if (this.addHelper(newList, event) < 0) {\r\n            return;\r\n        };\r\n        let newState = {\r\n            ...this.state,\r\n            events: newList\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n        return 0;\r\n    }\r\n\r\n    // Edit given event in calendar\r\n    // Removes old event and attempts to add new one\r\n    // If cannot add, no changes are saved\r\n    editEvent = (oldID, newEvent) => {\r\n        // Filter out old by ID\r\n        let newList = this.state.events;\r\n        newList = newList.filter(\r\n            event => event.id !== oldID\r\n        );\r\n\r\n        // Format new event to add\r\n        let eventID =\r\n            (dayList.indexOf(newEvent.dayOfWeek) * 48) +\r\n            newEvent.newHour * 2 +\r\n            (newEvent.isZero ? 0 : 1);\r\n        let currEvent = {\r\n            id: eventID,\r\n            title: newEvent.inputText,\r\n            day: newEvent.dayOfWeek,\r\n            hour: newEvent.newHour,\r\n            min: (newEvent.isZero ? 0 : 30),\r\n            hour2: newEvent.newHour2,\r\n            min2: (newEvent.isZero2 ? 0 : 30)\r\n        };\r\n\r\n        // Attempt to add event and exit if it fails\r\n        if (this.addHelper(newList, currEvent) < 0) {\r\n            return;\r\n        };\r\n\r\n        // Update state with new event change\r\n        let newState = {\r\n            ...this.state,\r\n            events: newList\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Remove given event from calendar\r\n    deleteEvent = (eventID) => {\r\n\r\n        // Filter out event by ID\r\n        let newList = this.state.events;\r\n        newList = newList.filter(\r\n            event => event.id !== eventID\r\n        );\r\n\r\n        // Update state with new event change\r\n        let newState = {\r\n            ...this.state,\r\n            events: newList\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Remove all events from calendar\r\n    clearEvents = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            events: []\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Toggle 24 hour time setting\r\n    toggleMilitary = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            useMilitary: !this.state.useMilitary\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Change accent color\r\n    changeColor = (num) => {\r\n        document.body.style.setProperty(\r\n            '--light-accent', lightColors[num]\r\n        );\r\n        document.body.style.setProperty(\r\n            '--dark-accent', darkColors[num]\r\n        );\r\n        let newState = {\r\n            ...this.state,\r\n            accentColor: colorNames[num]\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='calendar'>\r\n                <NavBar\r\n                    addEvent={this.addEvent}\r\n                    eventClear={this.clearEvents}\r\n                    useMilitary={this.state.useMilitary}\r\n                    toggleMilitary={this.toggleMilitary}\r\n                    accentColor={this.state.accentColor}\r\n                    changeColor={this.changeColor}>\r\n                </NavBar>\r\n                <EventList\r\n                    allEvents={this.state.events}\r\n                    editEvent={this.editEvent}\r\n                    deleteEvent={this.deleteEvent}\r\n                    useMilitary={this.state.useMilitary}>\r\n                </EventList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\nimport Calendar from './components/Calendar';\nimport './Modal.css';\nimport './index.css';\nimport './NavBar.css';\nimport './EventList.css';\n\nfunction App() {\n  return (\n    <Calendar></Calendar>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}