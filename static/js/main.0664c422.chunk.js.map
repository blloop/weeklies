{"version":3,"sources":["img/github-mark.svg","img/gear.svg","components/DayDropdown.js","components/HourDropdown.js","components/MinDropdown.js","components/ToggleAM.js","components/AddEventDialog.js","components/SettingsDialog.js","components/Modal.js","components/NavBar.js","components/EventList.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["WeekDays","DayDropdown","props","setDay","day","changeDay","toggleOpen","state","open","this","setState","className","onClick","bind","dayOfWeek","map","Component","HourDropdown","setHour","hour","changeHour","HoursList","useMilitary","currHour","newHour","isAM","MinDropdown","changeMin","isZero","ToggleAM","changeAM","AddEventDialog","updateText","event","newState","inputText","target","value","console","log","showDialog","closeModal","newEvent","title","min","eventAdd","onChange","addToList","SettingsDialog","type","checked","toggleMilitary","name","accentColor","changeColor","eventClear","Modal","openModal","NavBar","openDialog","openAddEvent","href","rel","src","ghLogo","alt","openSettings","gearLogo","formatEvent","EventList","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","allEvents","push","class","id","Calendar","jsonEvents","localStorage","getItem","addEvent","item","events","some","curr","time","alert","newList","Events","setItem","JSON","stringify","clearEvents","removeItem","color","document","body","style","setProperty","parse","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0664c422.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-mark.6fa18895.svg\";","export default __webpack_public_path__ + \"static/media/gear.1605e791.svg\";","import React, { Component } from 'react';\r\n\r\nconst WeekDays = [\r\n    'Sunday', 'Monday', 'Tuesday',\r\n    'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n];\r\n\r\nclass DayDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setDay = (day) => {\r\n        this.props.changeDay(day);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='drop-container'>\r\n                <button\r\n                    className='drop-box top-button square'\r\n                    onClick={this.toggleOpen.bind(this)}>\r\n                    {this.props.dayOfWeek}\r\n                </button>\r\n                {\r\n                    this.state.open ? (\r\n                        <ul className='dropdown'>\r\n                            {WeekDays.map(\r\n                                (day) => (day === this.props.dayOfWeek ?\r\n                                    null :\r\n                                    <button\r\n                                        key={day}\r\n                                        className='drop-box square'\r\n                                        onClick={() => this.setDay(day)}>\r\n                                        {day}\r\n                                    </button>)\r\n                            )}\r\n                        </ul>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DayDropdown;","import React, { Component } from 'react';\r\n\r\nclass HourDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setHour = (hour) => {\r\n        this.props.changeHour(hour);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        let HoursList =\r\n            (this.props.useMilitary ? [\r\n                0, 1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12, 13, 14, 15,\r\n                16, 17, 18, 19, 20, 21, 22, 23, ''\r\n            ] : [\r\n                1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12, ''\r\n            ]);\r\n\r\n        let currHour = (this.props.useMilitary ? this.props.newHour :\r\n            (this.props.newHour % 12 === 0 ?\r\n                12 :\r\n                this.props.newHour % 12\r\n            ));\r\n\r\n        return (\r\n            <div className='drop-container'>\r\n                <button className='drop-box top-button square small' onClick={this.toggleOpen.bind(this)}>\r\n                    {currHour}\r\n                </button>\r\n                {this.state.open ? (\r\n                    <ul className='dropdown wide'>\r\n                        {HoursList.map(\r\n                            (hour) => (hour === currHour ? null :\r\n                                <button\r\n                                    key={hour}\r\n                                    className='drop-box square small'\r\n                                    onClick={hour === '' ?\r\n                                        null :\r\n                                        () => {\r\n                                            this.setHour(\r\n                                                this.props.useMilitary ? hour :\r\n                                                    (hour === 12 ? (this.props.isAM ? 0 : 12) :\r\n                                                        hour + (this.props.isAM ? 0 : 12))\r\n                                            )\r\n                                        }}>\r\n                                    {hour}\r\n                                </button>\r\n                            )\r\n                        )}\r\n                    </ul>\r\n                ) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HourDropdown;","import React, { Component } from 'react';\r\n\r\nclass MinDropdown extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.props.changeMin}>\r\n                    {this.props.isZero ? '00' : '30'}\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MinDropdown;","import React, { Component } from 'react';\r\n\r\nclass ToggleAM extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.useMilitary ? null :\r\n                    <button\r\n                        className='drop-box top-button square small'\r\n                        onClick={this.props.changeAM}>\r\n                        {this.props.isAM ? 'AM' : 'PM'}\r\n                    </button>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleAM;","import React, { Component } from 'react';\r\nimport DayDropdown from './DayDropdown';\r\nimport HourDropdown from './HourDropdown';\r\nimport MinDropdown from './MinDropdown';\r\nimport ToggleAM from './ToggleAM';\r\n\r\nclass AddEventDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: this.props.showDialog,\r\n            inputText: '',\r\n            dayOfWeek: 'Sunday',\r\n            newHour: 0,\r\n            isZero: true\r\n        }\r\n    }\r\n\r\n    // Add an event to dialog\r\n    // Sends request to top level component\r\n    addToList() {\r\n        if (this.state.inputText !== '') {\r\n            this.props.closeModal();\r\n        }\r\n        let newEvent = {\r\n            title: this.state.inputText,\r\n            day: this.state.dayOfWeek,\r\n            hour: this.state.newHour,\r\n            min: (this.state.isZero ? 0 : 30)\r\n        };\r\n        this.props.eventAdd(newEvent);\r\n        let newState = {\r\n            ...this.state,\r\n            inputText: ''\r\n        }\r\n        this.setState(newState)\r\n    }\r\n\r\n    // Updates value of text field\r\n    // and stores as part of state\r\n    updateText = (event) => {\r\n        let newState = {\r\n            ...this.state,\r\n            inputText: event.target.value\r\n        }\r\n        this.setState(newState);\r\n    };\r\n\r\n    // Set current value for day of the week\r\n    changeDay = (day) => {\r\n        let newState = {\r\n            ...this.state,\r\n            dayOfWeek: day\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current hour of event\r\n    changeHour = (hour) => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour: hour\r\n        }\r\n        this.setState(newState);\r\n        console.log(this.state.newHour + ', ' +\r\n            (this.state.isZero ? '00' : '30'));\r\n    }\r\n\r\n    // Sets current minute of event\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            isZero: !this.state.isZero\r\n        }\r\n        this.setState(newState);\r\n        console.log(this.state.newHour + ', ' +\r\n            (this.state.isZero ? '00' : '30'));\r\n    }\r\n\r\n    // Sets current state of the hour AM/PM\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour: (this.state.newHour < 12 ?\r\n                this.state.newHour + 12 :\r\n                this.state.newHour - 12\r\n            )\r\n        }\r\n        this.setState(newState);\r\n        console.log(this.state.newHour + ', ' +\r\n            (this.state.isZero ? '00' : '30'));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='addevents overlay rounded'>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <div className='text-container'>\r\n                            <p> Name of Event: </p>\r\n                            <input\r\n                                onChange={this.updateText}\r\n                                value={this.state.inputText}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='row-items'>\r\n                            <DayDropdown\r\n                                changeDay={this.changeDay}\r\n                                dayOfWeek={this.state.dayOfWeek}>\r\n                            </DayDropdown>\r\n                            <HourDropdown\r\n                                changeHour={this.changeHour}\r\n                                isAM={this.state.newHour < 12}\r\n                                newHour={this.state.newHour}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </HourDropdown>\r\n                            <MinDropdown\r\n                                isZero={this.state.isZero}\r\n                                changeMin={this.changeMin}>\r\n                            </MinDropdown>\r\n                            <ToggleAM\r\n                                changeAM={this.changeAM}\r\n                                isAM={this.state.newHour < 12}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </ToggleAM>\r\n                        </div>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.addToList.bind(this)}>\r\n                            Add Event\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddEventDialog;","import React, { Component } from 'react';\r\n\r\nclass SettingsDialog extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='settings overlay rounded'>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <p className='subtitle'> Settings </p>\r\n                        <hr></hr>\r\n                        <div className='settings-row'>\r\n                            <p> Use 24 Hour Time </p>\r\n                            <input\r\n                                type={'checkbox'}\r\n                                checked={this.props.useMilitary}\r\n                                onChange={this.props.toggleMilitary}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='settings-row'>\r\n                            <p> Accent Color: </p>\r\n                            <input\r\n                                type={'radio'}\r\n                                name={'color'}\r\n                                checked={this.props.accentColor === 'red'}\r\n                                onChange={() => this.props.changeColor('red')}>\r\n                            </input>\r\n                            <p> Red </p>\r\n                            <input\r\n                                type={'radio'}\r\n                                name={'color'}\r\n                                checked={this.props.accentColor === 'blue'}\r\n                                onChange={() => this.props.changeColor('blue')}>\r\n                            </input>\r\n                            <p> Blue </p>\r\n                            <input\r\n                                type={'radio'}\r\n                                name={'color'}\r\n                                checked={this.props.accentColor === 'green'}\r\n                                onChange={() => this.props.changeColor('green')}>\r\n                            </input>\r\n                            <p> Green </p>\r\n                        </div>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.props.eventClear}>\r\n                            Clear Events\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsDialog;","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.openModal ?\r\n\r\n                    <div className='modal-bg'\r\n                        onClick={this.props.closeModal}>\r\n                    </div>\r\n\r\n                    : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport ghLogo from '../img/github-mark.svg';\r\nimport gearLogo from '../img/gear.svg';\r\nimport AddEventDialog from './AddEventDialog';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport Modal from './Modal';\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDialog: null\r\n        }\r\n    }\r\n\r\n    // Opens AddEvent dialog\r\n    openAddEvent() {\r\n        // Check if any other dialog is open\r\n        if (this.state.openDialog) {\r\n            return;\r\n        }\r\n        let newState = {\r\n            openDialog: 'events'\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Opens Settings dialog\r\n    openSettings() {\r\n        // Check if any other dialog is open\r\n        if (this.state.openDialog) {\r\n            return;\r\n        }\r\n        let newState = {\r\n            openDialog: 'settings'\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Closes all open dialogs\r\n    closeModal() {\r\n        let newState = {\r\n            openDialog: null\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar' >\r\n                <button\r\n                    type='button'\r\n                    className='accent'\r\n                    onClick={this.openAddEvent.bind(this)}>\r\n                    Add Event\r\n                </button>\r\n                <p className='title rounded'> Weeklies </p>\r\n                <div className='subbar'>\r\n                    <a\r\n                        href='https://github.com/blloop/weeklies'\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        <img\r\n                            src={ghLogo}\r\n                            alt='GitHub Link'\r\n                            className='logo'>\r\n                        </img>\r\n                    </a>\r\n                    <button\r\n                        type='button'\r\n                        className='contrast settings-button'\r\n                        onClick={this.openSettings.bind(this)}>\r\n                        <img\r\n                            src={gearLogo}\r\n                            alt='Settings Button'>\r\n                        </img>\r\n                    </button>\r\n                </div>\r\n\r\n                <Modal\r\n                    closeModal={this.closeModal.bind(this)}\r\n                    openModal={this.state.openDialog !== null}>\r\n                </Modal>\r\n                <AddEventDialog\r\n                    eventAdd={this.props.eventAdd}\r\n                    closeModal={this.closeModal.bind(this)}\r\n                    showDialog={this.state.openDialog === 'events'}\r\n                    useMilitary={this.props.useMilitary}>\r\n                </AddEventDialog>\r\n                <SettingsDialog\r\n                    eventClear={this.props.eventClear}\r\n                    closeModal={this.closeModal.bind(this)}\r\n                    showDialog={this.state.openDialog === 'settings'}\r\n                    accentColor={this.props.accentColor}\r\n                    changeColor={this.props.changeColor}\r\n                    useMilitary={this.props.useMilitary}\r\n                    toggleMilitary={this.props.toggleMilitary}>\r\n                </SettingsDialog>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nlet formatEvent = (value, useMilitary) => {\r\n    return (useMilitary ?\r\n        `Time: ${value.hour}: ${value.min}` :\r\n        (value.hour > 11 ?\r\n            `Time: ${value.hour - 12}: ${value.min}PM` :\r\n            `Time: ${value.hour}: ${value.min}AM`\r\n        )\r\n    );\r\n}\r\n\r\nclass EventList extends Component {\r\n\r\n    render() {\r\n        let Sunday = [];\r\n        let Monday = [];\r\n        let Tuesday = [];\r\n        let Wednesday = [];\r\n        let Thursday = [];\r\n        let Friday = [];\r\n        let Saturday = [];\r\n\r\n        this.props.allEvents.map((value) => (\r\n            value.day === 'Sunday' ?\r\n                Sunday.push(<div className={'event'} key={value.title}>\r\n                    <p> {value.title} </p>\r\n                    <p> {formatEvent(value, this.props.useMilitary)} </p>\r\n                </div>) :\r\n                (value.day === 'Monday' ?\r\n                    Monday.push(<div class={'event'} key={value.title}>\r\n                        <p> {value.title} </p>\r\n                        <p> {formatEvent(value, this.props.useMilitary)} </p>\r\n                    </div>) :\r\n                    (value.day === 'Tuesday' ?\r\n                        Tuesday.push(<div class={'event'} key={value.title}>\r\n                            <p> {value.title} </p>\r\n                            <p> {formatEvent(value, this.props.useMilitary)} </p>\r\n                        </div>) :\r\n                        (value.day === 'Wednesday' ?\r\n                            Wednesday.push(<div class={'event'} key={value.title}>\r\n                                <p> {value.title} </p>\r\n                                <p> {formatEvent(value, this.props.useMilitary)} </p>\r\n                            </div>) :\r\n                            (value.day === 'Thursday' ?\r\n                                Thursday.push(<div class={'event'} key={value.title}>\r\n                                    <p> {value.title} </p>\r\n                                    <p> {formatEvent(value, this.props.useMilitary)} </p>\r\n                                </div>) :\r\n                                (value.day === 'Friday' ?\r\n                                    Friday.push(<div class={'event'} key={value.title}>\r\n                                        <p> {value.title} </p>\r\n                                        <p> {formatEvent(value, this.props.useMilitary)} </p>\r\n                                    </div>) :\r\n                                    (value.day === 'Saturday' ?\r\n                                        Saturday.push(<div class={'event'} key={value.title}>\r\n                                            <p> {value.title} </p>\r\n                                            <p> {formatEvent(value, this.props.useMilitary)} </p>\r\n                                        </div>) : null))))))))\r\n\r\n        return (\r\n            <div className='eventlist'>\r\n                <div className='column' id='Sunday'>\r\n                    <p className='subtitle'> SUN </p>\r\n                    <hr></hr>\r\n                    {Sunday}\r\n                </div>\r\n                <div className='column' id='Monday'>\r\n                    <p className='subtitle'> MON </p>\r\n                    <hr></hr>\r\n                    {Monday}\r\n                </div>\r\n                <div className='column' id='Tuesday'>\r\n                    <p className='subtitle'> TUE </p>\r\n                    <hr></hr>\r\n                    {Tuesday}\r\n                </div>\r\n                <div className='column' id='Wednesday'>\r\n                    <p className='subtitle'> WED </p>\r\n                    <hr></hr>\r\n                    {Wednesday}\r\n                </div>\r\n                <div className='column' id='Thursday'>\r\n                    <p className='subtitle'> THU </p>\r\n                    <hr></hr>\r\n                    {Thursday}\r\n                </div>\r\n                <div className='column' id='Friday'>\r\n                    <p className='subtitle'> FRI </p>\r\n                    <hr></hr>\r\n                    {Friday}\r\n                </div>\r\n                <div className='column' id='Saturday'>\r\n                    <p className='subtitle'> SAT </p>\r\n                    <hr></hr>\r\n                    {Saturday}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport EventList from './EventList';\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        let jsonEvents = localStorage.getItem('weeklies-events');\r\n        super(props);\r\n        this.state = {\r\n            events: (jsonEvents ? JSON.parse(jsonEvents) : []),\r\n            useMilitary: false,\r\n            accentColor: 'red'\r\n        };\r\n    }\r\n\r\n    // Add an event to calendar\r\n    addEvent = (item) => {\r\n        if (item.title === '') {\r\n            alert('Event title cannot be empty!');\r\n            return;\r\n        }\r\n        if (this.state.events.some(\r\n            curr =>\r\n                curr.title === item.title &&\r\n                curr.day === item.day &&\r\n                curr.time === item.time\r\n        )) {\r\n            alert(\"Cannot add duplicate event!\");\r\n            return;\r\n        }\r\n        let newList = this.state.events\r\n        newList.push(item)\r\n        let newState = {\r\n            ...this.state,\r\n            Events: newList\r\n        }\r\n        this.setState(newState);\r\n        localStorage.setItem('weeklies-events', JSON.stringify(this.state.events));\r\n    };\r\n\r\n    // Remove all events from calendar\r\n    clearEvents = () => {\r\n        localStorage.removeItem('weeklies-events');\r\n        let newState = {\r\n            ...this.state,\r\n            events: []\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Toggle 24 hour time setting\r\n    toggleMilitary = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            useMilitary: !this.state.useMilitary\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Change accent color\r\n    changeColor = (color) => {\r\n        document.body.style.setProperty(\r\n            '--light-accent',\r\n            (color === 'red') ?\r\n                'rgb(255, 158, 158)' :\r\n                ((color === 'blue') ?\r\n                    'rgb(167 188 255)' :\r\n                    ('rgb(157 241 140)')\r\n                )\r\n        );\r\n        document.body.style.setProperty(\r\n            '--dark-accent',\r\n            (color === 'red') ?\r\n                'rgb(255, 89, 89)' :\r\n                ((color === 'blue') ?\r\n                    'rgb(103, 139, 255)' :\r\n                    ('rgb(97, 218, 73)')\r\n                )\r\n        );\r\n        let newState = {\r\n            ...this.state,\r\n            accentColor: color\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='calendar'>\r\n                <NavBar\r\n                    eventAdd={this.addEvent}\r\n                    eventClear={this.clearEvents}\r\n                    useMilitary={this.state.useMilitary}\r\n                    toggleMilitary={this.toggleMilitary}\r\n                    accentColor={this.state.accentColor}\r\n                    changeColor={this.changeColor}>\r\n                </NavBar>\r\n                <EventList\r\n                    allEvents={this.state.events}\r\n                    useMilitary={this.state.useMilitary}>\r\n                </EventList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\nimport Calendar from './components/Calendar';\n\nfunction App() {\n  return (\n    <Calendar></Calendar>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}