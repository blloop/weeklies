{"version":3,"sources":["img/github-mark.svg","img/gear.svg","components/NavBar.js","components/Modal.js","components/Data.js","components/DayDropdown.js","components/HourDropdown.js","components/MinDropdown.js","components/ToggleAM.js","components/EditEventDialog.js","components/EventColumn.js","components/EventList.js","components/WarningDialog.js","components/AddEventDialog.js","components/SettingsDialog.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","type","onClick","props","openModal","href","target","rel","src","ghLogo","alt","gearLogo","Component","Modal","this","closeModal","colorNames","darkColors","lightColors","dayList","dayAbbrevList","DayDropdown","toggleOpen","setState","open","state","setDay","day","changeDay","dayOfWeek","map","HourDropdown","setHour","hour","changeHour","HoursList","useMilitary","currHour","newHour","isAM","MinDropdown","changeMin","isZero","ToggleAM","changeAM","EditEventDialog","updateText","event","tempEvent","newEvent","inputText","value","setNewEvent","changeHour2","newHour2","changeMin2","isZero2","changeAM2","showDialog","onChange","editEvent","deleteEvent","EventColumn","createSelections","outDays","push","openAdder","i","style","top","outSelect","dayNum","currDay","eList","formatEvent","EventList","scaleTime","val","newState","numLines","num","outLines","openAdd","index","newDefault","Math","floor","min","setDefault","openEditor","id","indexOf","title","hour2","min2","oldEvent","height","length","slice","openDialog","allEvents","filter","WarningDialog","AddEventDialog","addToList","addEvent","addByName","updateDefault","SettingsDialog","colorButtons","backgroundColor","checked","accentColor","changeColor","toggleMilitary","clearEvents","Calendar","jsonInfo","localStorage","getItem","addHelper","list","alert","some","curr","sort","a","b","name","addOne","console","log","newList","events","setItem","JSON","stringify","oldID","currEvent","eventID","info","addDefault","update","document","body","setProperty","parse","warningDialog","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e36f3bbb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-mark.6fa18895.svg\";","export default __webpack_public_path__ + \"static/media/gear.1605e791.svg\";","import React, { Component } from 'react';\r\nimport ghLogo from '../img/github-mark.svg';\r\nimport gearLogo from '../img/gear.svg';\r\n\r\nclass NavBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar' >\r\n                <button\r\n                    type='button'\r\n                    className='accent'\r\n                    onClick={() => this.props.openModal('add')}>\r\n                    Add Event\r\n                </button>\r\n                <p className='title rounded'> Weeklies </p>\r\n                <div className='subbar'>\r\n                    <a\r\n                        href='https://github.com/blloop/weeklies'\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'>\r\n                        <img\r\n                            src={ghLogo}\r\n                            alt='GitHub Link'\r\n                            className='logo'>\r\n                        </img>\r\n                    </a>\r\n                    <button\r\n                        type='button'\r\n                        className='contrast settings-button'\r\n                        onClick={() => this.props.openModal('settings')}>\r\n                        <img\r\n                            src={gearLogo}\r\n                            alt='Settings Button'>\r\n                        </img>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.openModal ?\r\n                    <div className='modal-bg'\r\n                        onClick={this.props.closeModal}>\r\n                    </div>\r\n                    : null}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","const colorNames = [\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'green',\r\n    'skyblue',\r\n    'blue',\r\n    'purple'\r\n];\r\n\r\nconst darkColors = [\r\n    'rgb(234, 90, 71)',\r\n    'rgb(236, 140, 25)',\r\n    'rgb(223, 194, 50)',\r\n    'rgb(109, 207, 117)',\r\n    'rgb(79, 209, 220)',\r\n    'rgb(103, 139, 255)',\r\n    'rgb(167, 99, 219)',\r\n    'rgb(103, 139, 255)'\r\n];\r\n\r\nconst lightColors = [\r\n    'rgb(250, 154, 141)',\r\n    'rgb(242, 183, 113)',\r\n    'rgb(241, 218, 100)',\r\n    'rgb(172, 233, 178)',\r\n    'rgb(146, 236, 243)',\r\n    'rgb(167, 188, 255)',\r\n    'rgb(205, 169, 234)',\r\n    'rgb(103, 139, 255)'\r\n];\r\n\r\nconst dayList = [\r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday',\r\n    'Thursday', 'Friday', 'Saturday'\r\n];\r\n\r\nconst dayAbbrevList = [\r\n    'SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'\r\n]\r\n\r\nexport { colorNames, darkColors, lightColors, dayList, dayAbbrevList };","import React, { Component } from 'react';\r\nimport { dayList } from './Data';\r\n\r\nclass DayDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setDay = (day) => {\r\n        this.props.changeDay(day);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square'\r\n                    onClick={this.toggleOpen}>\r\n                    {this.props.dayOfWeek}\r\n                </button>\r\n                {\r\n                    this.state.open ? (\r\n                        <ul className='dropdown'>\r\n                            {dayList.map((day) =>\r\n                                <button\r\n                                    key={day}\r\n                                    className='drop-box square'\r\n                                    onClick={() => this.setDay(day)}>\r\n                                    {day}\r\n                                </button>\r\n                            )}\r\n                        </ul>\r\n                    ) : null\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayDropdown;","import React, { Component } from 'react';\r\n\r\nclass HourDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen = () => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setHour = (hour) => {\r\n        this.props.changeHour(hour);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        let HoursList =\r\n            (this.props.useMilitary ? [\r\n                0, 1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12, 13, 14, 15,\r\n                16, 17, 18, 19, 20, 21, 22, 23\r\n            ] : [\r\n                1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12\r\n            ]);\r\n\r\n        let currHour = (this.props.useMilitary ?\r\n            this.props.newHour :\r\n            (this.props.newHour % 12 === 0 ?\r\n                12 :\r\n                this.props.newHour % 12\r\n            ));\r\n\r\n        return (\r\n            <div className='drop-container'>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.toggleOpen}>\r\n                    {currHour}\r\n                </button>\r\n                {this.state.open ? (\r\n                    <ul className='dropdown wide'>\r\n                        {HoursList.map((hour) =>\r\n                            <button\r\n                                key={hour}\r\n                                className='drop-box square small'\r\n                                onClick={() => {\r\n                                    this.setHour(\r\n                                        this.props.useMilitary ?\r\n                                            hour :\r\n                                            (hour === 12 ? 0 : hour) +\r\n                                            (this.props.isAM ? 0 : 12)\r\n                                    )\r\n                                }}>\r\n                                {hour}\r\n                            </button>\r\n                        )}\r\n                    </ul>\r\n                ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HourDropdown;","import React, { Component } from 'react';\r\n\r\nclass MinDropdown extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.props.changeMin}>\r\n                    {this.props.isZero ? '00' : '30'}\r\n                </button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinDropdown;","import React, { Component } from 'react';\r\n\r\nclass ToggleAM extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.useMilitary ? null :\r\n                    <button\r\n                        className='drop-box top-button square small'\r\n                        onClick={this.props.changeAM}>\r\n                        {this.props.isAM ? 'AM' : 'PM'}\r\n                    </button>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToggleAM;","import React, { Component } from 'react';\r\nimport DayDropdown from './DayDropdown';\r\nimport HourDropdown from './HourDropdown';\r\nimport MinDropdown from './MinDropdown';\r\nimport ToggleAM from './ToggleAM';\r\n\r\nclass EditEventDialog extends Component {\r\n\r\n    // Updates value of text field\r\n    updateText = (event) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            inputText: event.target.value\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    };\r\n\r\n    // Set current value for day of the week\r\n    changeDay = (day) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            dayOfWeek: day\r\n        }\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current hour of event\r\n    changeHour = (hour) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour: hour\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current minute of event\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            isZero: !this.props.newEvent.isZero\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current state of the hour AM/PM\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour: (this.props.newEvent.newHour < 12 ?\r\n                this.props.newEvent.newHour + 12 :\r\n                this.props.newEvent.newHour - 12\r\n            )\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n\r\n    // Sets current hour of event #2\r\n    changeHour2 = (hour) => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour2: hour\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current minute of event #2\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin2 = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            isZero2: !this.props.newEvent.isZero2\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    // Sets current state of the hour AM/PM #2\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM2 = () => {\r\n        let tempEvent = {\r\n            ...this.props.newEvent,\r\n            newHour2: (this.props.newEvent.newHour2 < 12 ?\r\n                this.props.newEvent.newHour2 + 12 :\r\n                this.props.newEvent.newHour2 - 12\r\n            )\r\n        };\r\n        this.props.setNewEvent(tempEvent);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='addevents overlay rounded'>\r\n                        <p className='header rounded'> Edit Event </p>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <div className='text-container'>\r\n                            <p> Name of Event: </p>\r\n                            <input\r\n                                onChange={this.updateText}\r\n                                value={this.props.newEvent.inputText}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='row-items'>\r\n                            <DayDropdown\r\n                                changeDay={this.changeDay}\r\n                                dayOfWeek={this.props.newEvent.dayOfWeek}>\r\n                            </DayDropdown>\r\n                            <div className='time-items'>\r\n                                <HourDropdown\r\n                                    changeHour={this.changeHour}\r\n                                    isAM={this.props.newEvent.newHour < 12}\r\n                                    newHour={this.props.newEvent.newHour}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </HourDropdown>\r\n                                <MinDropdown\r\n                                    isZero={this.props.newEvent.isZero}\r\n                                    changeMin={this.changeMin}>\r\n                                </MinDropdown>\r\n                                <ToggleAM\r\n                                    changeAM={this.changeAM}\r\n                                    isAM={this.props.newEvent.newHour < 12}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </ToggleAM>\r\n                            </div>\r\n                        </div>\r\n                        <div className='time-items'>\r\n                            <HourDropdown\r\n                                changeHour={this.changeHour2}\r\n                                isAM={this.props.newEvent.newHour2 < 12}\r\n                                newHour={this.props.newEvent.newHour2}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </HourDropdown>\r\n                            <MinDropdown\r\n                                isZero={this.props.newEvent.isZero2}\r\n                                changeMin={this.changeMin2}>\r\n                            </MinDropdown>\r\n                            <ToggleAM\r\n                                changeAM={this.changeAM2}\r\n                                isAM={this.props.newEvent.newHour2 < 12}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </ToggleAM>\r\n                        </div>\r\n                        <button\r\n                            className='contrast-light thin-button'\r\n                            onClick={this.props.editEvent}>\r\n                            Edit Event\r\n                        </button>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.props.deleteEvent}>\r\n                            Delete Event\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditEventDialog;","import { Component } from \"react\";\r\nimport { dayAbbrevList } from \"./Data\";\r\n\r\nclass EventColumn extends Component {\r\n\r\n    // Creates hover highlights for column cells\r\n    createSelections = (day) => {\r\n        let outDays = [];\r\n        for (let i = 0; i < 48; i++) {\r\n            outDays.push(\r\n                <div\r\n                    key={i}\r\n                    onClick={() => this.props.openAdder(day, i)}\r\n                    className='selection'\r\n                    style={{ top: 60 + (i * 25) }}>\r\n                </div>);\r\n        }\r\n        return outDays;\r\n    }\r\n\r\n    render() {\r\n\r\n        let outSelect = this.createSelections(this.props.dayNum);\r\n\r\n        return (\r\n            <div className={'column' +\r\n                (this.props.currDay === this.props.dayNum ?\r\n                    '' : ' mono-hide')\r\n            }>\r\n                <p className='subtitle'>{dayAbbrevList[this.props.dayNum]}</p>\r\n                <hr></hr>\r\n                {this.props.eList.map((event) => {\r\n                    return (this.props.formatEvent(event));\r\n                })}\r\n                {outSelect}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventColumn;","import React, { Component } from 'react';\r\nimport Modal from './Modal';\r\nimport EditEventDialog from './EditEventDialog';\r\nimport EventColumn from './EventColumn';\r\nimport { dayList } from './Data';\r\n\r\nclass EventList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currDay: 0,\r\n            oldEvent: null,\r\n            newEvent: null\r\n        };\r\n    }\r\n\r\n    // Returns hourly intervals in a 12 hour span\r\n    // Call twice for a full 24 hour span\r\n    scaleTime = (useMilitary) => {\r\n        return (\r\n            useMilitary ?\r\n                <>\r\n                    <p>00:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                    <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                    <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n                    <p>12:00</p><p>13:00</p><p>14:00</p><p>15:00</p>\r\n                    <p>16:00</p><p>17:00</p><p>18:00</p><p>19:00</p>\r\n                    <p>20:00</p><p>21:00</p><p>22:00</p><p>23:00</p>\r\n                </> :\r\n                <>\r\n                    <p>12:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                    <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                    <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n                    <p>12:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                    <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                    <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n                </>\r\n        );\r\n    }\r\n\r\n    // Changes current day in mono view\r\n    changeDay = (val) => {\r\n        let newState = {\r\n            ...this.state,\r\n            currDay: (this.state.currDay + val === -1 ?\r\n                6 :\r\n                (this.state.currDay + val) % 7\r\n            )\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Returns array of N horizonal lines\r\n    numLines = (num) => {\r\n        let outLines = [];\r\n        for (let i = 0; i < num; i++) {\r\n            outLines.push(<hr key={i}></hr>)\r\n        };\r\n        return outLines;\r\n    }\r\n\r\n    // Sets default info for event add\r\n    // and opens event add dialog\r\n    openAdd = (day, index) => {\r\n        let newDefault = {\r\n            day: dayList[day],\r\n            hour: Math.floor(index / 2),\r\n            min: index % 2 === 0\r\n        }\r\n        this.props.setDefault(newDefault);\r\n    }\r\n\r\n    // Opens popup editor and\r\n    // prepares event values for edit tracking\r\n    openEditor = (event) => {\r\n        this.props.openModal('edit');\r\n        let eventID =\r\n            (dayList.indexOf(event.day) * 48) +\r\n            event.hour * 2 +\r\n            (event.min === 0 ? 0 : 1);\r\n        let tempEvent = {\r\n            id: eventID,\r\n            inputText: event.title,\r\n            dayOfWeek: event.day,\r\n            newHour: event.hour,\r\n            isZero: event.min === 0,\r\n            newHour2: event.hour2,\r\n            isZero2: event.min2 === 0\r\n        };\r\n        let newState = {\r\n            ...this.state,\r\n            oldEvent: tempEvent,\r\n            newEvent: tempEvent\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Calls for an event edit by passing\r\n    // in previous event and new event\r\n    editEvent = () => {\r\n        this.props.closeModal();\r\n        this.props.editEvent(\r\n            this.state.oldEvent.id,\r\n            this.state.newEvent\r\n        );\r\n    }\r\n\r\n    // Calls for an event to be deleted\r\n    // by passing oldEvent's id\r\n    deleteEvent = () => {\r\n        this.closeModal();\r\n        this.props.deleteEvent(this.state.oldEvent.id);\r\n    }\r\n\r\n    // Updates placeholder event to track\r\n    // new changes for upcoming event\r\n    setNewEvent = (event) => {\r\n        let tempEvent = {\r\n            inputText: event.inputText,\r\n            dayOfWeek: event.dayOfWeek,\r\n            newHour: event.newHour,\r\n            isZero: event.isZero,\r\n            newHour2: (\r\n                (event.newHour2 === 0\r\n                    && event.newHour > event.newHour2\r\n                    && event.isZero2) ?\r\n                    24 :\r\n                    event.newHour2\r\n            ),\r\n            isZero2: event.isZero2\r\n        };\r\n        let newState = {\r\n            ...this.state,\r\n            newEvent: tempEvent\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Positions events in calendar based on time\r\n    formatEvent = (event) => {\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: 60 +\r\n                        (event.hour * 50) +\r\n                        (event.min === 30 ? 25 : 0),\r\n                    height: ((\r\n                        (event.hour2 || 0) -\r\n                        (event.hour || 0)) * 50) +\r\n                        ((event.min || 0) >\r\n                            (event.min2 || 0) ? -25 : 0) +\r\n                        ((event.min || 0) <\r\n                            (event.min2 || 0) ? 25 : 0) - 1.2\r\n                }}\r\n                className={'event'}\r\n                onClick={() => this.openEditor(event)}\r\n                key={event.id}>\r\n                <p> {event.title.length > 25 ?\r\n                    event.title.slice(0, 25) + '...' :\r\n                    event.title}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='eventlist'>\r\n                <Modal\r\n                    closeModal={this.props.closeModal}\r\n                    openModal={this.state.openDialog}>\r\n                </Modal>\r\n                <EditEventDialog\r\n                    editEvent={this.editEvent}\r\n                    deleteEvent={this.deleteEvent}\r\n                    setNewEvent={this.setNewEvent}\r\n                    newEvent={this.state.newEvent}\r\n                    closeModal={this.props.closeModal}\r\n                    showDialog={this.props.showDialog}\r\n                    useMilitary={this.props.useMilitary}>\r\n                </EditEventDialog>\r\n                <div className='time-scale scale-left mono-hide'>\r\n                    {this.scaleTime(this.props.useMilitary)}\r\n                </div>\r\n                <div className='grid-lines'>\r\n                    {this.numLines(47)}\r\n                </div>\r\n                <div className='column utility mono-show'>\r\n                    <button\r\n                        onClick={() => this.changeDay(-1)}\r\n                        className='switch move-left'>\r\n                        &lt;\r\n                    </button> {/* < */}\r\n                    <button\r\n                        onClick={() => this.changeDay(1)}\r\n                        className='switch move-right'>\r\n                        &gt;\r\n                    </button> {/* > */}\r\n                    <div className='time-scale scale-left'>\r\n                        {this.scaleTime(this.props.useMilitary)}\r\n                    </div>\r\n                </div>\r\n                <EventColumn\r\n                    dayNum={0}\r\n                    currDay={this.state.currDay}\r\n                    openAdder={this.openAdd}\r\n                    formatEvent={this.formatEvent}\r\n                    eList={this.props.allEvents.filter(\r\n                        event => event.day === dayList[0]\r\n                    )}>\r\n                </EventColumn>\r\n                <EventColumn\r\n                    dayNum={1}\r\n                    currDay={this.state.currDay}\r\n                    openAdder={this.openAdd}\r\n                    formatEvent={this.formatEvent}\r\n                    eList={this.props.allEvents.filter(\r\n                        event => event.day === dayList[1]\r\n                    )}>\r\n                </EventColumn>\r\n                <EventColumn\r\n                    dayNum={2}\r\n                    currDay={this.state.currDay}\r\n                    openAdder={this.openAdd}\r\n                    formatEvent={this.formatEvent}\r\n                    eList={this.props.allEvents.filter(\r\n                        event => event.day === dayList[2]\r\n                    )}>\r\n                </EventColumn>\r\n                <EventColumn\r\n                    dayNum={3}\r\n                    currDay={this.state.currDay}\r\n                    openAdder={this.openAdd}\r\n                    formatEvent={this.formatEvent}\r\n                    eList={this.props.allEvents.filter(\r\n                        event => event.day === dayList[3]\r\n                    )}>\r\n                </EventColumn>\r\n                <EventColumn\r\n                    dayNum={4}\r\n                    currDay={this.state.currDay}\r\n                    openAdder={this.openAdd}\r\n                    formatEvent={this.formatEvent}\r\n                    eList={this.props.allEvents.filter(\r\n                        event => event.day === dayList[4]\r\n                    )}>\r\n                </EventColumn>\r\n                <EventColumn\r\n                    dayNum={5}\r\n                    currDay={this.state.currDay}\r\n                    openAdder={this.openAdd}\r\n                    formatEvent={this.formatEvent}\r\n                    eList={this.props.allEvents.filter(\r\n                        event => event.day === dayList[5]\r\n                    )}>\r\n                </EventColumn>\r\n                <EventColumn\r\n                    dayNum={6}\r\n                    currDay={this.state.currDay}\r\n                    openAdder={this.openAdd}\r\n                    formatEvent={this.formatEvent}\r\n                    eList={this.props.allEvents.filter(\r\n                        event => event.day === dayList[6]\r\n                    )}>\r\n                </EventColumn>\r\n                <div className='time-scale scale-right mono-hide'>\r\n                    {this.scaleTime(this.props.useMilitary)}\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import { Component } from \"react\";\r\n\r\nclass WarningDialog extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WarningDialog;","import React, { Component } from 'react';\r\nimport DayDropdown from './DayDropdown';\r\nimport HourDropdown from './HourDropdown';\r\nimport MinDropdown from './MinDropdown';\r\nimport Modal from './Modal';\r\nimport WarningDialog from './WarningDialog';\r\nimport ToggleAM from './ToggleAM';\r\n\r\nlet dayList = [\r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday',\r\n    'Thursday', 'Friday', 'Saturday'\r\n]\r\n\r\nclass AddEventDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputText: ''\r\n        };\r\n    }\r\n\r\n    // Add an event to dialog\r\n    // Sends request to top level component\r\n    addToList = () => {\r\n        let eventID =\r\n            (dayList.indexOf(this.props.newEvent.dayOfWeek) * 48) +\r\n            this.props.newEvent.newHour * 2 +\r\n            (this.props.newEvent.isZero ? 0 : 1);\r\n        let newEvent = {\r\n            id: eventID,\r\n            title: this.props.newEvent.inputText,\r\n            day: this.props.newEvent.dayOfWeek,\r\n            hour: this.props.newEvent.newHour,\r\n            min: (this.props.newEvent.isZero ? 0 : 30),\r\n            hour2: (\r\n                (this.props.newEvent.newHour2 === 0\r\n                    && this.props.newEvent.newHour > this.props.newEvent.newHour2\r\n                    && this.props.newEvent.isZero2) ?\r\n                    24 :\r\n                    this.props.newEvent.newHour2\r\n            ),\r\n            min2: (this.props.newEvent.isZero2 ? 0 : 30)\r\n        };\r\n        this.props.addEvent(newEvent);\r\n    }\r\n\r\n    addByName = () => {\r\n        this.props.addByName(this.state.inputText);\r\n    }\r\n\r\n    // Updates value of text field\r\n    // and stores as part of state\r\n    updateText = (event) => {\r\n        let newState = {\r\n            inputText: event.target.value\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Set event to specified day of week\r\n    changeDay = (day) => {\r\n        let newDefault = {\r\n            ...this.props.newEvent,\r\n            dayOfWeek: day\r\n        };\r\n        this.props.updateDefault(newDefault);\r\n    }\r\n\r\n    // Sets current hour of event start time\r\n    changeHour = (hour) => {\r\n        let newDefault = {\r\n            ...this.props.newEvent,\r\n            newHour: hour\r\n        };\r\n        this.props.updateDefault(newDefault);\r\n    }\r\n\r\n    // Sets current minute of event start time\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin = () => {\r\n        let newDefault = {\r\n            ...this.props.newEvent,\r\n            isZero: !this.props.newEvent.isZero\r\n        };\r\n        this.props.updateDefault(newDefault);\r\n    }\r\n\r\n    // Sets current state of the hour (AM/PM)\r\n    // for the event start time\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM = () => {\r\n        let newDefault = {\r\n            ...this.props.newEvent,\r\n            newHour: (this.props.newEvent.newHour < 12 ?\r\n                this.props.newEvent.newHour + 12 :\r\n                this.props.newEvent.newHour - 12\r\n            )\r\n        };\r\n        this.props.updateDefault(newDefault);\r\n    }\r\n\r\n\r\n    // Sets current hour of event end time\r\n    changeHour2 = (hour) => {\r\n        let newDefault = {\r\n            ...this.props.newEvent,\r\n            newHour2: hour\r\n        };\r\n        this.props.updateDefault(newDefault);\r\n    }\r\n\r\n    // Sets current minute of event end time\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin2 = () => {\r\n        let newDefault = {\r\n            ...this.props.newEvent,\r\n            isZero2: !this.props.newEvent.isZero2\r\n        };\r\n        this.props.updateDefault(newDefault);\r\n    }\r\n\r\n    // Sets current state of the hour (AM/PM)\r\n    // for the event end time\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM2 = () => {\r\n        let newDefault = {\r\n            ...this.props.newEvent,\r\n            newHour2: (this.props.newEvent.newHour2 < 12 ?\r\n                this.props.newEvent.newHour2 + 12 :\r\n                this.props.newEvent.newHour2 - 12\r\n            )\r\n        };\r\n        this.props.updateDefault(newDefault);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='addevents overlay rounded'>\r\n                        <Modal></Modal>\r\n                        <WarningDialog></WarningDialog>\r\n                        <p className='header rounded'> Add Event </p>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <div className='text-container'>\r\n                            <p> Name of Event: </p>\r\n                            <input\r\n                                onChange={this.updateText}\r\n                                value={this.state.inputText}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='row-items'>\r\n                            <DayDropdown\r\n                                changeDay={this.changeDay}\r\n                                dayOfWeek={this.props.newEvent.dayOfWeek}>\r\n                            </DayDropdown>\r\n                            <div className='time-items'>\r\n                                <HourDropdown\r\n                                    changeHour={this.changeHour}\r\n                                    isAM={this.props.newEvent.newHour < 12}\r\n                                    newHour={this.props.newEvent.newHour}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </HourDropdown>\r\n                                <MinDropdown\r\n                                    isZero={this.props.newEvent.isZero}\r\n                                    changeMin={this.changeMin}>\r\n                                </MinDropdown>\r\n                                <ToggleAM\r\n                                    changeAM={this.changeAM}\r\n                                    isAM={this.props.newEvent.newHour < 12}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </ToggleAM>\r\n                            </div>\r\n                        </div>\r\n                        <div className='time-items'>\r\n                            <HourDropdown\r\n                                changeHour={this.changeHour2}\r\n                                isAM={this.props.newEvent.newHour2 < 12}\r\n                                newHour={this.props.newEvent.newHour2}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </HourDropdown>\r\n                            <MinDropdown\r\n                                isZero={this.props.newEvent.isZero2}\r\n                                changeMin={this.changeMin2}>\r\n                            </MinDropdown>\r\n                            <ToggleAM\r\n                                changeAM={this.changeAM2}\r\n                                isAM={this.props.newEvent.newHour2 < 12}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </ToggleAM>\r\n                        </div>\r\n                        <button\r\n                            className='contrast-light thin-button'\r\n                            onClick={this.addByName}>\r\n                            Add Event\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddEventDialog;","import React, { Component } from 'react';\r\nimport Modal from './Modal';\r\nimport WarningDialog from './WarningDialog';\r\nimport { colorNames, darkColors } from './Data';\r\n\r\nclass SettingsDialog extends Component {\r\n\r\n    render() {\r\n        let colorButtons = [];\r\n        for (let i = 0; i < colorNames.length; i++) {\r\n            colorButtons.push(\r\n                <div\r\n                    key={i}\r\n                    style={{ backgroundColor: darkColors[i] }}\r\n                    checked={this.props.accentColor === colorNames[i]}\r\n                    onClick={() => this.props.changeColor(i)}>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='settings overlay rounded'>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <Modal></Modal>\r\n                        <WarningDialog></WarningDialog>\r\n                        <p className='subtitle'> Settings </p>\r\n                        <hr></hr>\r\n                        <div className='settings-row'>\r\n                            <p> Use 24 Hour Time </p>\r\n                            <input\r\n                                type={'checkbox'}\r\n                                checked={this.props.useMilitary}\r\n                                onChange={this.props.toggleMilitary}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='settings-row'>\r\n                            <p> Accent Color: </p>\r\n                            <div className='color-palette'>\r\n                                {colorButtons}\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.props.clearEvents}>\r\n                            Clear Events\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingsDialog;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport Modal from './Modal';\r\nimport EventList from './EventList';\r\nimport AddEventDialog from './AddEventDialog';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport { colorNames, lightColors, darkColors, dayList } from './Data';\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        // Import weeklies data from browser storage\r\n        let jsonInfo = localStorage.getItem('weeklies');\r\n        super(props);\r\n        this.state = {\r\n            events: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['events'] :\r\n                []\r\n            ),\r\n            useMilitary: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['useMilitary'] :\r\n                false\r\n            ),\r\n            accentColor: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['accentColor'] :\r\n                'orange'\r\n            ),\r\n            newEvent: {\r\n                dayOfWeek: 'Sunday',\r\n                newHour: 0,\r\n                isZero: true,\r\n                newHour2: 0,\r\n                isZero2: true\r\n            },\r\n            openDialog: null,\r\n            warningDialog: false\r\n        };\r\n    }\r\n\r\n    // Update UI accent color upon page load\r\n    componentDidMount() {\r\n        this.changeColor(\r\n            colorNames.indexOf(this.state.accentColor)\r\n        );\r\n    }\r\n\r\n    // Helper function to add event to list\r\n    addHelper = (list, event) => {\r\n        if (event.title.length === 0) {\r\n            alert('Event title cannot be empty!');\r\n            return -1;\r\n        };\r\n        if (event.hour2 < event.hour ||\r\n            (event.hour === event.hour2 &&\r\n                event.min >= event.min2)) {\r\n            alert(\"Event must occur for at least 30 min!\");\r\n            return -1;\r\n        };\r\n        if (list.some(\r\n            curr =>\r\n            ((curr.day === event.day) &&\r\n                ((\r\n                    (curr.hour === event.hour &&\r\n                        curr.min === event.min) ||\r\n                    (curr.hour2 === event.hour2 &&\r\n                        curr.min2 === event.min2)\r\n                ) ||\r\n                    ((curr.hour + (curr.min ? 0 : 0.5) <\r\n                        event.hour2 + (event.min2 ? 0 : 0.5) &&\r\n                        curr.hour2 + (curr.min2 ? 0 : 0.5) >\r\n                        event.hour + (event.min ? 0 : 0.5)) ||\r\n                        (curr.hour2 + (curr.min2 ? 0 : 0.5) >\r\n                            event.hour + (event.min ? 0 : 0.5) &&\r\n                            curr.hour + (curr.min ? 0 : 0.5) <\r\n                            event.hour + (event.min ? 0 : 0.5)))\r\n                ))\r\n        )) {\r\n            alert(\"Event overlaps with a current event!\");\r\n            return -1;\r\n        };\r\n        list.push(event);\r\n        list.sort((a, b) => a.id - b.id);\r\n        return 0;\r\n    }\r\n\r\n    addByName = (name) => {\r\n        let addOne = this.state.newEvent;\r\n        addOne.title = name;\r\n        this.addEvent(addOne);\r\n    }\r\n\r\n    // Add an event to calendar\r\n    addEvent = (event) => {\r\n        console.log(event);\r\n        let newList = this.state.events;\r\n        if (this.addHelper(newList, event) < 0) {\r\n            return;\r\n        };\r\n        let newState = {\r\n            ...this.state,\r\n            events: newList,\r\n            openDialog: null\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Edit given event in calendar\r\n    // Removes old event and attempts to add new one\r\n    // If cannot add, no changes are saved\r\n    editEvent = (oldID, newEvent) => {\r\n        // Filter out old by ID\r\n        let newList = this.state.events;\r\n        newList = newList.filter(\r\n            event => event.id !== oldID\r\n        );\r\n\r\n        // Format new event to add\r\n        let eventID =\r\n            (dayList.indexOf(newEvent.dayOfWeek) * 48) +\r\n            newEvent.newHour * 2 +\r\n            (newEvent.isZero ? 0 : 1);\r\n        let currEvent = {\r\n            id: eventID,\r\n            title: newEvent.inputText,\r\n            day: newEvent.dayOfWeek,\r\n            hour: newEvent.newHour,\r\n            min: (newEvent.isZero ? 0 : 30),\r\n            hour2: newEvent.newHour2,\r\n            min2: (newEvent.isZero2 ? 0 : 30)\r\n        };\r\n\r\n        // Attempt to add event and exit if it fails\r\n        if (this.addHelper(newList, currEvent) < 0) {\r\n            return;\r\n        };\r\n\r\n        // Update state with new event change\r\n        let newState = {\r\n            ...this.state,\r\n            events: newList\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Remove given event from calendar\r\n    deleteEvent = (eventID) => {\r\n        // Filter out event by ID\r\n        let newList = this.state.events;\r\n        newList = newList.filter(\r\n            event => event.id !== eventID\r\n        );\r\n\r\n        // Update state with new event change\r\n        let newState = {\r\n            ...this.state,\r\n            events: newList\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Remove all events from calendar\r\n    clearEvents = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            events: [],\r\n            openDialog: null\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Sets default event info in add dialog\r\n    setDefault = (info) => {\r\n        let addDefault = {\r\n            dayOfWeek: info.day,\r\n            newHour: info.hour,\r\n            isZero: info.min,\r\n            newHour2: info.hour,\r\n            isZero2: info.min\r\n        }\r\n        let newState = {\r\n            ...this.state.newEvent,\r\n            newEvent: addDefault,\r\n            openDialog: 'add',\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Update default event info\r\n    updateDefault = (update) => {\r\n        let newState = {\r\n            ...this.state,\r\n            newEvent: update\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Opens a dialog by name\r\n    openModal = (name) => {\r\n        let newState = {\r\n            ...this.state,\r\n            openDialog: name\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Closes all open dialogs\r\n    closeModal = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            openDialog: null\r\n        };\r\n        this.setState(newState);\r\n    }\r\n\r\n\r\n    // Toggle 24 hour time setting\r\n    toggleMilitary = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            useMilitary: !this.state.useMilitary\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Change accent color\r\n    changeColor = (num) => {\r\n        document.body.style.setProperty(\r\n            '--light-accent', lightColors[num]\r\n        );\r\n        document.body.style.setProperty(\r\n            '--dark-accent', darkColors[num]\r\n        );\r\n        let newState = {\r\n            ...this.state,\r\n            accentColor: colorNames[num]\r\n        };\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.events);\r\n        return (\r\n            <div className='calendar'>\r\n                <NavBar\r\n                    openModal={this.openModal}>\r\n                </NavBar>\r\n                <Modal\r\n                    closeModal={this.closeModal}\r\n                    openModal={this.state.openDialog !== null}>\r\n                </Modal>\r\n                <AddEventDialog\r\n                    addByName={this.addByName}\r\n                    addEvent={this.addEvent}\r\n                    newEvent={this.state.newEvent}\r\n                    updateDefault={this.updateDefault}\r\n                    closeModal={this.closeModal}\r\n                    showDialog={this.state.openDialog === 'add'}\r\n                    useMilitary={this.state.useMilitary}>\r\n                </AddEventDialog>\r\n                <SettingsDialog\r\n                    clearEvents={this.clearEvents}\r\n                    closeModal={this.closeModal}\r\n                    showDialog={this.state.openDialog === 'settings'}\r\n                    accentColor={this.state.accentColor}\r\n                    changeColor={this.changeColor}\r\n                    useMilitary={this.state.useMilitary}\r\n                    toggleMilitary={this.toggleMilitary}>\r\n                </SettingsDialog>\r\n                <EventList\r\n                    allEvents={this.state.events}\r\n                    editEvent={this.editEvent}\r\n                    deleteEvent={this.deleteEvent}\r\n                    setDefault={this.setDefault}\r\n                    openModal={this.openModal}\r\n                    showDialog={this.state.openDialog === 'edit'}\r\n                    useMilitary={this.state.useMilitary}>\r\n                </EventList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\nimport Calendar from './components/Calendar';\nimport './Modal.css';\nimport './index.css';\nimport './NavBar.css';\nimport './EventList.css';\n\nfunction App() {\n  return (\n    <Calendar></Calendar>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}