{"version":3,"sources":["img/github-mark.svg","img/gear.svg","components/DayDropdown.js","components/HourDropdown.js","components/MinDropdown.js","components/ToggleAM.js","components/AddEventDialog.js","components/SettingsDialog.js","components/Modal.js","components/NavBar.js","components/EditEventDialog.js","components/EventList.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["WeekDays","DayDropdown","props","setDay","day","changeDay","toggleOpen","state","open","this","setState","className","onClick","bind","dayOfWeek","map","Component","HourDropdown","setHour","hour","changeHour","HoursList","useMilitary","currHour","newHour","isAM","MinDropdown","changeMin","isZero","ToggleAM","changeAM","AddEventDialog","updateText","event","newState","inputText","target","value","changeHour2","newHour2","changeMin2","isZero2","changeAM2","showDialog","newEvent","title","min","hour2","min2","eventAdd","closeModal","onChange","addToList","SettingsDialog","type","checked","toggleMilitary","name","accentColor","changeColor","eventClear","Modal","openModal","NavBar","openAddEvent","openDialog","openSettings","href","rel","src","ghLogo","alt","gearLogo","EditEventDialog","openPopup","scaleTime","EventList","val","currDay","popOpen","closePopup","formatEvent","style","top","height","Sunday","allEvents","filter","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","eventCompare","ev1","ev2","Calendar","jsonInfo","localStorage","getItem","addEvent","item","events","some","curr","alert","newList","push","sort","Events","setItem","JSON","stringify","clearEvents","color","document","body","setProperty","parse","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ff624b29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-mark.6fa18895.svg\";","export default __webpack_public_path__ + \"static/media/gear.1605e791.svg\";","import React, { Component } from 'react';\r\n\r\nconst WeekDays = [\r\n    'Sunday', 'Monday', 'Tuesday',\r\n    'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n];\r\n\r\nclass DayDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setDay = (day) => {\r\n        this.props.changeDay(day);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square'\r\n                    onClick={this.toggleOpen.bind(this)}>\r\n                    {this.props.dayOfWeek}\r\n                </button>\r\n                {\r\n                    this.state.open ? (\r\n                        <ul className='dropdown'>\r\n                            {WeekDays.map((day) =>\r\n                                <button\r\n                                    key={day}\r\n                                    className='drop-box square'\r\n                                    onClick={() => this.setDay(day)}>\r\n                                    {day}\r\n                                </button>\r\n                            )}\r\n                        </ul>\r\n                    ) : null\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DayDropdown;","import React, { Component } from 'react';\r\n\r\nclass HourDropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    // Toggles dropdown open state\r\n    toggleOpen() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    // Sets dropdown value\r\n    setHour = (hour) => {\r\n        this.props.changeHour(hour);\r\n        this.toggleOpen();\r\n    }\r\n\r\n    render() {\r\n        let HoursList =\r\n            (this.props.useMilitary ? [\r\n                0, 1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12, 13, 14, 15,\r\n                16, 17, 18, 19, 20, 21, 22, 23\r\n            ] : [\r\n                1, 2, 3, 4, 5, 6, 7,\r\n                8, 9, 10, 11, 12\r\n            ]);\r\n\r\n        let currHour = (this.props.useMilitary ?\r\n            this.props.newHour :\r\n            (this.props.newHour % 12 === 0 ?\r\n                12 :\r\n                this.props.newHour % 12\r\n            ));\r\n\r\n        return (\r\n            <div className='drop-container'>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.toggleOpen.bind(this)}>\r\n                    {currHour}\r\n                </button>\r\n                {this.state.open ? (\r\n                    <ul className='dropdown wide'>\r\n                        {HoursList.map((hour) =>\r\n                            <button\r\n                                key={hour}\r\n                                className='drop-box square small'\r\n                                onClick={() => {\r\n                                    this.setHour(\r\n                                        this.props.useMilitary ?\r\n                                            hour :\r\n                                            (hour === 12 ? 0 : hour) +\r\n                                            (this.props.isAM ? 0 : 12)\r\n                                    )\r\n                                }}>\r\n                                {hour}\r\n                            </button>\r\n                        )}\r\n                    </ul>\r\n                ) : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HourDropdown;","import React, { Component } from 'react';\r\n\r\nclass MinDropdown extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={this.props.changeMin}>\r\n                    {this.props.isZero ? '00' : '30'}\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MinDropdown;","import React, { Component } from 'react';\r\n\r\nclass ToggleAM extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.useMilitary ? null :\r\n                    <button\r\n                        className='drop-box top-button square small'\r\n                        onClick={this.props.changeAM}>\r\n                        {this.props.isAM ? 'AM' : 'PM'}\r\n                    </button>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleAM;","import React, { Component } from 'react';\r\nimport DayDropdown from './DayDropdown';\r\nimport HourDropdown from './HourDropdown';\r\nimport MinDropdown from './MinDropdown';\r\nimport ToggleAM from './ToggleAM';\r\n\r\nclass AddEventDialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: this.props.showDialog,\r\n            inputText: '',\r\n            dayOfWeek: 'Sunday',\r\n            newHour: 0,\r\n            isZero: true,\r\n            newHour2: 0,\r\n            isZero2: true\r\n        }\r\n    }\r\n\r\n    // Add an event to dialog\r\n    // Sends request to top level component\r\n    addToList() {\r\n        let newEvent = {\r\n            title: this.state.inputText,\r\n            day: this.state.dayOfWeek,\r\n            hour: this.state.newHour,\r\n            min: (this.state.isZero ? 0 : 30),\r\n            hour2: this.state.newHour2,\r\n            min2: (this.state.isZero2 ? 0 : 30)\r\n        };\r\n        this.props.eventAdd(newEvent);\r\n    }\r\n\r\n    // Updates value of text field\r\n    // and stores as part of state\r\n    updateText = (event) => {\r\n        let newState = {\r\n            ...this.state,\r\n            inputText: event.target.value\r\n        }\r\n        this.setState(newState);\r\n    };\r\n\r\n    // Set current value for day of the week\r\n    changeDay = (day) => {\r\n        let newState = {\r\n            ...this.state,\r\n            dayOfWeek: day\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current hour of event\r\n    changeHour = (hour) => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour: hour\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current minute of event\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            isZero: !this.state.isZero\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current state of the hour AM/PM\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour: (this.state.newHour < 12 ?\r\n                this.state.newHour + 12 :\r\n                this.state.newHour - 12\r\n            )\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n\r\n    // Sets current hour of event #2\r\n    changeHour2 = (hour) => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour2: hour\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current minute of event #2\r\n    // Intervals of 0:30, represented by bool\r\n    changeMin2 = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            isZero2: !this.state.isZero2\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Sets current state of the hour AM/PM #2\r\n    // Only valid if 24 hour time is not in use\r\n    changeAM2 = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            newHour2: (this.state.newHour2 < 12 ?\r\n                this.state.newHour2 + 12 :\r\n                this.state.newHour2 - 12\r\n            )\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='addevents overlay rounded'>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <div className='text-container'>\r\n                            <p> Name of Event: </p>\r\n                            <input\r\n                                onChange={this.updateText}\r\n                                value={this.state.inputText}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='row-items'>\r\n                            <DayDropdown\r\n                                changeDay={this.changeDay}\r\n                                dayOfWeek={this.state.dayOfWeek}>\r\n                            </DayDropdown>\r\n                            <div className='time-items'>\r\n                                <HourDropdown\r\n                                    changeHour={this.changeHour}\r\n                                    isAM={this.state.newHour < 12}\r\n                                    newHour={this.state.newHour}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </HourDropdown>\r\n                                <MinDropdown\r\n                                    isZero={this.state.isZero}\r\n                                    changeMin={this.changeMin}>\r\n                                </MinDropdown>\r\n                                <ToggleAM\r\n                                    changeAM={this.changeAM}\r\n                                    isAM={this.state.newHour < 12}\r\n                                    useMilitary={this.props.useMilitary}>\r\n                                </ToggleAM>\r\n                            </div>\r\n                        </div>\r\n                        <div className='time-items'>\r\n                            <HourDropdown\r\n                                changeHour={this.changeHour2}\r\n                                isAM={this.state.newHour2 < 12}\r\n                                newHour={this.state.newHour2}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </HourDropdown>\r\n                            <MinDropdown\r\n                                isZero={this.state.isZero2}\r\n                                changeMin={this.changeMin2}>\r\n                            </MinDropdown>\r\n                            <ToggleAM\r\n                                changeAM={this.changeAM2}\r\n                                isAM={this.state.newHour2 < 12}\r\n                                useMilitary={this.props.useMilitary}>\r\n                            </ToggleAM>\r\n                        </div>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.addToList.bind(this)}>\r\n                            Add Event\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddEventDialog;","import React, { Component } from 'react';\r\n\r\nclass SettingsDialog extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.showDialog &&\r\n                    <div className='settings overlay rounded'>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <p className='subtitle'> Settings </p>\r\n                        <hr></hr>\r\n                        <div className='settings-row'>\r\n                            <p> Use 24 Hour Time </p>\r\n                            <input\r\n                                type={'checkbox'}\r\n                                checked={this.props.useMilitary}\r\n                                onChange={this.props.toggleMilitary}>\r\n                            </input>\r\n                        </div>\r\n                        <div className='settings-row'>\r\n                            <p> Accent Color: </p>\r\n                            <input\r\n                                type={'radio'}\r\n                                name={'color'}\r\n                                checked={this.props.accentColor === 'red'}\r\n                                onChange={() => this.props.changeColor('red')}>\r\n                            </input>\r\n                            <p> Red </p>\r\n                            <input\r\n                                type={'radio'}\r\n                                name={'color'}\r\n                                checked={this.props.accentColor === 'blue'}\r\n                                onChange={() => this.props.changeColor('blue')}>\r\n                            </input>\r\n                            <p> Blue </p>\r\n                            <input\r\n                                type={'radio'}\r\n                                name={'color'}\r\n                                checked={this.props.accentColor === 'green'}\r\n                                onChange={() => this.props.changeColor('green')}>\r\n                            </input>\r\n                            <p> Green </p>\r\n                        </div>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={this.props.eventClear}>\r\n                            Clear Events\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsDialog;","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.openModal ?\r\n                    <div className='modal-bg'\r\n                        onClick={this.props.closeModal}>\r\n                    </div>\r\n                    : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport ghLogo from '../img/github-mark.svg';\r\nimport gearLogo from '../img/gear.svg';\r\nimport AddEventDialog from './AddEventDialog';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport Modal from './Modal';\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDialog: null\r\n        }\r\n    }\r\n\r\n    // Opens AddEvent dialog\r\n    openAddEvent = () => {\r\n        // Check if any other dialog is open\r\n        if (this.state.openDialog) {\r\n            return;\r\n        }\r\n        let newState = {\r\n            openDialog: 'events'\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Opens Settings dialog\r\n    openSettings = () => {\r\n        // Check if any other dialog is open\r\n        if (this.state.openDialog) {\r\n            return;\r\n        }\r\n        let newState = {\r\n            openDialog: 'settings'\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Closes all open dialogs\r\n    closeModal = () => {\r\n        let newState = {\r\n            openDialog: null\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar' >\r\n                <button\r\n                    type='button'\r\n                    className='accent'\r\n                    onClick={this.openAddEvent}>\r\n                    Add Event\r\n                </button>\r\n                <p className='title rounded'> Weeklies </p>\r\n                <div className='subbar'>\r\n                    <a\r\n                        href='https://github.com/blloop/weeklies'\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        <img\r\n                            src={ghLogo}\r\n                            alt='GitHub Link'\r\n                            className='logo'>\r\n                        </img>\r\n                    </a>\r\n                    <button\r\n                        type='button'\r\n                        className='contrast settings-button'\r\n                        onClick={this.openSettings}>\r\n                        <img\r\n                            src={gearLogo}\r\n                            alt='Settings Button'>\r\n                        </img>\r\n                    </button>\r\n                </div>\r\n\r\n                <Modal\r\n                    closeModal={this.closeModal}\r\n                    openModal={this.state.openDialog !== null}>\r\n                </Modal>\r\n                <AddEventDialog\r\n                    eventAdd={this.props.eventAdd}\r\n                    closeModal={this.closeModal}\r\n                    showDialog={this.state.openDialog === 'events'}\r\n                    useMilitary={this.props.useMilitary}>\r\n                </AddEventDialog>\r\n                <SettingsDialog\r\n                    eventClear={this.props.eventClear}\r\n                    closeModal={this.closeModal}\r\n                    showDialog={this.state.openDialog === 'settings'}\r\n                    accentColor={this.props.accentColor}\r\n                    changeColor={this.props.changeColor}\r\n                    useMilitary={this.props.useMilitary}\r\n                    toggleMilitary={this.props.toggleMilitary}>\r\n                </SettingsDialog>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass EditEventDialog extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.openPopup &&\r\n                    <div className='overlay rounded'>\r\n                        <button\r\n                            onClick={this.props.closeModal}\r\n                            className='close-button'>\r\n                            &#10005;\r\n                        </button>\r\n                        <p className='subtitle'> Edit Event </p>\r\n                        <hr></hr>\r\n\r\n                        <div className='settings-row'>\r\n                            <p> Name of the Event </p>\r\n                            <p> Time of the Event </p>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditEventDialog;","import React, { Component } from 'react';\r\nimport Modal from './Modal';\r\nimport EditEventDialog from './EditEventDialog';\r\n\r\n// Returns hourly intervals in a 12 hour span\r\n// Call twice for a full 24 hour span\r\nlet scaleTime = () => {\r\n    return (\r\n        <>\r\n            <p>12:00</p><p>01:00</p>\r\n            <p>02:00</p><p>03:00</p>\r\n            <p>04:00</p><p>05:00</p>\r\n            <p>06:00</p><p>07:00</p>\r\n            <p>08:00</p><p>09:00</p>\r\n            <p>10:00</p><p>11:00</p>\r\n        </>\r\n    );\r\n}\r\n\r\nclass EventList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currDay: 1,\r\n            popOpen: false\r\n        }\r\n    }\r\n\r\n    // Changes current day in mono view\r\n    changeDay = (val) => {\r\n        let newState = {\r\n            ...this.state,\r\n            currDay: (this.state.currDay + val === -1 ?\r\n                6 :\r\n                (this.state.currDay + val) % 7\r\n            )\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Opens open popup editor\r\n    openPopup = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            popOpen: true\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Closes open popup editor\r\n    closePopup = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            popOpen: false\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    // Positions events on calendar based on time\r\n    formatEvent = (event) => {\r\n        return (\r\n            <div\r\n                style={{\r\n                    top: 60 +\r\n                        (event.hour * 50) +\r\n                        (event.min === 30 ? 25 : 0),\r\n                    height: ((\r\n                        (event.hour2 || 0) -\r\n                        (event.hour || 0)) * 50) +\r\n                        ((event.min || 0) >\r\n                            (event.min2 || 0) ? -25 : 0) +\r\n                        ((event.min || 0) <\r\n                            (event.min2 || 0) ? 25 : 0)\r\n                }}\r\n                className={'event'}\r\n                onClick={this.openPopup}\r\n                key={event.title}>\r\n                <p> {event.title} </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let Sunday = this.props.allEvents.filter(\r\n            event => event.day === 'Sunday'\r\n        );\r\n        let Monday = this.props.allEvents.filter(\r\n            event => event.day === 'Monday'\r\n        );\r\n        let Tuesday = this.props.allEvents.filter(\r\n            event => event.day === 'Tuesday'\r\n        );\r\n        let Wednesday = this.props.allEvents.filter(\r\n            event => event.day === 'Wednesday'\r\n        );\r\n        let Thursday = this.props.allEvents.filter(\r\n            event => event.day === 'Thursday'\r\n        );\r\n        let Friday = this.props.allEvents.filter(\r\n            event => event.day === 'Friday'\r\n        );\r\n        let Saturday = this.props.allEvents.filter(\r\n            event => event.day === 'Saturday'\r\n        );\r\n\r\n        return (\r\n            <div className='eventlist'>\r\n                <Modal\r\n                    closeModal={this.closePopup}\r\n                    openModal={this.state.popOpen}>\r\n                </Modal>\r\n                <EditEventDialog\r\n                    closeModal={this.closePopup}\r\n                    openPopup={this.state.popOpen}>\r\n                </EditEventDialog>\r\n                <div className='column utility mono-show'>\r\n                    <button\r\n                        onClick={() => this.changeDay(-1)}\r\n                        className='switch move-left'>\r\n                        &lt;\r\n                    </button> {/* < */}\r\n                    <button\r\n                        onClick={() => this.changeDay(1)}\r\n                        className='switch move-right'>\r\n                        &gt;\r\n                    </button> {/* > */}\r\n                    <div className='time-scale scale-left'>\r\n                        {scaleTime()}{scaleTime()}{/* Left Scale */}\r\n                    </div>\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 0 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <div className='time-scale scale-left mono-hide'>\r\n                        {scaleTime()}{scaleTime()}{/* Left Scale */}\r\n                    </div>\r\n                    <p className='subtitle'> SUN </p>\r\n                    <hr></hr>\r\n                    {Sunday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 1 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> MON </p>\r\n                    <hr></hr>\r\n                    {Monday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 2 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> TUE </p>\r\n                    <hr></hr>\r\n                    {Tuesday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 3 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> WED </p>\r\n                    <hr></hr>\r\n                    {Wednesday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 4 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> THU </p>\r\n                    <hr></hr>\r\n                    {Thursday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 5 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> FRI </p>\r\n                    <hr></hr>\r\n                    {Friday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                </div>\r\n                <div className={'column' +\r\n                    (this.state.currDay === 6 ?\r\n                        '' : ' mono-hide')\r\n                }>\r\n                    <p className='subtitle'> SAT </p>\r\n                    <hr></hr>\r\n                    {Saturday.map((event) => {\r\n                        return (this.formatEvent(event));\r\n                    })}\r\n                    <div className='time-scale scale-right mono-hide'>\r\n                        {scaleTime()}{scaleTime()}{/* Right Scale */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport EventList from './EventList';\r\n\r\n// Compare two events by hour, then minute\r\nlet eventCompare = (ev1, ev2) => {\r\n    return (\r\n        ev1.hour - ev2.hour === 0 ?\r\n            ev1.min - ev2.min :\r\n            ev1.hour - ev2.hour\r\n    );\r\n}\r\n\r\nclass Calendar extends Component {\r\n\r\n    constructor(props) {\r\n        let jsonInfo = localStorage.getItem('weeklies');\r\n        super(props);\r\n        // console.log(jsonInfo.accentColor);\r\n        this.state = {\r\n            events: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['events'] :\r\n                []\r\n            ),\r\n            useMilitary: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['useMilitary'] :\r\n                false\r\n            ),\r\n            accentColor: (jsonInfo ?\r\n                JSON.parse(jsonInfo)['accentColor'] :\r\n                'red'\r\n            )\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.changeColor(this.state.accentColor);\r\n    }\r\n\r\n    // Add an event to calendar\r\n    addEvent = (item) => {\r\n        if (item.title === '') {\r\n            alert('Event title cannot be empty!');\r\n            return;\r\n        }\r\n        if (this.state.events.some(\r\n            curr =>\r\n                curr.day === item.day &&\r\n                ((curr.hour + (curr.min ? 0 : 0.5) <\r\n                    item.hour2 + (item.min2 ? 0 : 0.5) &&\r\n                    curr.hour2 + (curr.min2 ? 0 : 0.5) >\r\n                    item.hour + (item.min ? 0 : 0.5)) ||\r\n                    (curr.hour2 + (curr.min2 ? 0 : 0.5) >\r\n                        item.hour + (item.min ? 0 : 0.5) &&\r\n                        curr.hour + (curr.min ? 0 : 0.5) <\r\n                        item.hour + (item.min ? 0 : 0.5))\r\n                )\r\n        )) {\r\n            alert(\"Event overlaps with a current event!\");\r\n            return;\r\n        }\r\n        if (item.hour2 < item.hour ||\r\n            (item.hour === item.hour2 && item.min >= item.min2)) {\r\n            alert(\"Event must occur for at least 30 min!\");\r\n            return;\r\n        }\r\n        let newList = this.state.events\r\n        newList.push(item);\r\n        newList.sort(eventCompare);\r\n        let newState = {\r\n            ...this.state,\r\n            Events: newList\r\n        }\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    };\r\n\r\n    // Remove all events from calendar\r\n    clearEvents = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            events: []\r\n        }\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Toggle 24 hour time setting\r\n    toggleMilitary = () => {\r\n        let newState = {\r\n            ...this.state,\r\n            useMilitary: !this.state.useMilitary\r\n        }\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n    }\r\n\r\n    // Change accent color\r\n    changeColor = (color) => {\r\n        document.body.style.setProperty(\r\n            '--light-accent',\r\n            (color === 'red') ?\r\n                'rgb(255, 158, 158)' :\r\n                ((color === 'blue') ?\r\n                    'rgb(167 188 255)' :\r\n                    ('rgb(157 241 140)')\r\n                )\r\n        );\r\n        document.body.style.setProperty(\r\n            '--dark-accent',\r\n            (color === 'red') ?\r\n                'rgb(255, 89, 89)' :\r\n                ((color === 'blue') ?\r\n                    'rgb(103, 139, 255)' :\r\n                    ('rgb(97, 218, 73)')\r\n                )\r\n        );\r\n        let newState = {\r\n            ...this.state,\r\n            accentColor: color\r\n        }\r\n        this.setState(newState);\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(newState)\r\n        );\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='calendar'>\r\n                <NavBar\r\n                    eventAdd={this.addEvent}\r\n                    eventClear={this.clearEvents}\r\n                    useMilitary={this.state.useMilitary}\r\n                    toggleMilitary={this.toggleMilitary}\r\n                    accentColor={this.state.accentColor}\r\n                    changeColor={this.changeColor}>\r\n                </NavBar>\r\n                <EventList\r\n                    allEvents={this.state.events}\r\n                    useMilitary={this.state.useMilitary}>\r\n                </EventList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\nimport Calendar from './components/Calendar';\n\nfunction App() {\n  return (\n    <Calendar></Calendar>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}