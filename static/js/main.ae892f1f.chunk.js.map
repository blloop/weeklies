{"version":3,"sources":["components/Data.js","img/github-mark.svg","img/gear.svg","components/NavBar.js","components/EventColumn.js","components/EventList.js","components/TimeRow.js","components/ConfirmDialog.js","components/EventDialog.js","components/SettingsDialog.js","components/WarningDialog.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["colorNames","darkColors","lightColors","range","num","Array","from","length","x","i","dayList","dayAbbrevList","NavBar","props","className","type","onClick","setDialog","href","target","rel","src","ghLogo","alt","gearLogo","EventColumn","numDay","monoDay","events","map","event","style","top","start","height","end","editUpcoming","id","title","slice","addUpcoming","EventList","scaleTime","format","setMono","allEvents","filter","day","TimeRow","time","toggleHour","menu","field","setMenu","tempEvent","HoursList","hour","newEvent","setUpcoming","changeHour","ConfirmDialog","isOpen","zIndex","close","clickEvent","EventDialog","useState","confirm","setConfirm","onChange","value","hidden","name","addEvent","editEvent","deleteEvent","SettingsDialog","checked","toggleFormat","n","backgroundColor","accentColor","changeColor","clearEvents","WarningDialog","text","setWarning","Calendar","getList","localStorage","getItem","getInfo","JSON","parse","setEvents","accent","setAccent","setFormat","upcoming","oldid","setOldid","dialog","warning","mono","addID","indexOf","newList","parseEvent","push","sort","a","b","updateEvents","list","some","curr","setItem","stringify","changeAccent","useCallback","index","document","body","setProperty","useEffect","findIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ae892f1f.chunk.js","sourcesContent":["const colorNames = [\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'green',\r\n    'skyblue',\r\n    'blue',\r\n    'purple'\r\n];\r\n\r\nconst darkColors = [\r\n    'rgb(234, 90, 71)',\r\n    'rgb(236, 140, 25)',\r\n    'rgb(223, 194, 50)',\r\n    'rgb(109, 207, 117)',\r\n    'rgb(79, 209, 220)',\r\n    'rgb(103, 139, 255)',\r\n    'rgb(167, 99, 219)',\r\n    'rgb(103, 139, 255)'\r\n];\r\n\r\nconst lightColors = [\r\n    'rgb(250, 154, 141)',\r\n    'rgb(242, 183, 113)',\r\n    'rgb(241, 218, 100)',\r\n    'rgb(172, 233, 178)',\r\n    'rgb(146, 236, 243)',\r\n    'rgb(167, 188, 255)',\r\n    'rgb(205, 169, 234)',\r\n    'rgb(103, 139, 255)'\r\n];\r\n\r\nconst range = (num) => (\r\n    Array.from({ length: num }, (x, i) => i)\r\n);\r\n\r\nconst dayList = [\r\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday',\r\n    'Thursday', 'Friday', 'Saturday'\r\n];\r\n\r\nconst dayAbbrevList = [\r\n    'SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'\r\n];\r\n\r\nexport {\r\n    colorNames, darkColors, lightColors,\r\n    range, dayList, dayAbbrevList\r\n};","export default __webpack_public_path__ + \"static/media/github-mark.6fa18895.svg\";","export default __webpack_public_path__ + \"static/media/gear.1605e791.svg\";","import React from 'react';\r\nimport ghLogo from '../img/github-mark.svg';\r\nimport gearLogo from '../img/gear.svg';\r\n\r\nconst NavBar = props => (\r\n    <div className='navbar'>\r\n        <button\r\n            type='button'\r\n            className='accent'\r\n            onClick={() => props.setDialog('add')}>\r\n            Add Event\r\n        </button>\r\n        <p className='title'> Weeklies </p>\r\n        <div className='subbar'>\r\n            <a\r\n                href='https://github.com/blloop/weeklies'\r\n                target='_blank'\r\n                rel='noopener noreferrer'>\r\n                <img\r\n                    src={ghLogo}\r\n                    alt='GitHub Link'\r\n                    className='logo'>\r\n                </img>\r\n            </a>\r\n            <button\r\n                type='button'\r\n                className='contrast settings-button'\r\n                onClick={() => \r\n                    props.setDialog('settings')\r\n                }>\r\n                <img\r\n                    src={gearLogo}\r\n                    alt='Settings Button'>\r\n                </img>\r\n            </button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { range, dayList, dayAbbrevList } from \"./Data\";\r\n\r\nconst EventColumn = props => (\r\n    <div className={'column' +\r\n        (props.numDay === props.monoDay ? \r\n            '' : \r\n            ' mono-hide'\r\n        )}>\r\n        <p className='subtitle'>\r\n            {dayAbbrevList[props.numDay]}\r\n        </p>\r\n        <hr></hr>\r\n        {props.events.map((event) => {\r\n            return (\r\n                <div\r\n                    style={{ \r\n                        top: \r\n                            60 + (event.start * 25),\r\n                        height:\r\n                            (event.end - event.start) * 25\r\n                    }}\r\n                    className={'event'}\r\n                    onClick={() => \r\n                        props.editUpcoming(event.id)\r\n                    }\r\n                    key={event.id}>\r\n                    <p> {event.title.length > 25 ?\r\n                        event.title.slice(0, 25) + '...' :\r\n                        event.title}\r\n                    </p>\r\n                </div>\r\n            )\r\n        })}\r\n        {range(48).map(num => (\r\n            <div\r\n                key={num}\r\n                onClick={() =>props.addUpcoming(\r\n                        dayList[props.numDay], num\r\n                )}\r\n                className='selection'\r\n                style={{ top: 60 + (num * 25) }}>\r\n            </div >\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default EventColumn;","import React from 'react';\r\nimport EventColumn from './EventColumn';\r\nimport { dayList, range } from './Data';\r\n\r\nconst EventList = props => {\r\n    const scaleTime = (format) => (\r\n        format ?\r\n            <>\r\n                <p>00:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n                <p>12:00</p><p>13:00</p><p>14:00</p><p>15:00</p>\r\n                <p>16:00</p><p>17:00</p><p>18:00</p><p>19:00</p>\r\n                <p>20:00</p><p>21:00</p><p>22:00</p><p>23:00</p>\r\n            </> :\r\n            <>\r\n                <p>12:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n                <p>12:00</p><p>01:00</p><p>02:00</p><p>03:00</p>\r\n                <p>04:00</p><p>05:00</p><p>06:00</p><p>07:00</p>\r\n                <p>08:00</p><p>09:00</p><p>10:00</p><p>11:00</p>\r\n            </>\r\n    );\r\n    \r\n    return (\r\n        <div className='eventlist'>\r\n            <div className='time-scale scale-left mono-hide'>\r\n                {scaleTime(props.format)}\r\n            </div>\r\n            <div className='grid-lines'>\r\n                {range(23).map(num => (\r\n                    <hr key={num}></hr>\r\n                ))}\r\n            </div>\r\n            <div className='column utility mono-show'>\r\n                <button\r\n                    onClick={() =>\r\n                        props.setMono((props.monoDay - 1) % 7)\r\n                    }\r\n                    className='switch move-left'>\r\n                    &lt;\r\n                </button> {/* < */}\r\n                <button\r\n                    onClick={() =>\r\n                        props.setMono((props.monoDay + 1) % 7)\r\n                    }\r\n                    className='switch move-right'>\r\n                    &gt;\r\n                </button> {/* > */}\r\n                <div className='time-scale scale-left'>\r\n                    {scaleTime(props.format)}\r\n                </div>\r\n            </div>\r\n            {range(7).map((num) =>\r\n                <EventColumn\r\n                    key={num}\r\n                    addUpcoming={props.addUpcoming}\r\n                    editUpcoming={props.editUpcoming}\r\n                    monoDay={props.monoDay}\r\n                    numDay={num}\r\n                    events={props.allEvents.filter(\r\n                        event => event.day === dayList[num]\r\n                    )}\r\n                />\r\n            )}\r\n            <div className='time-scale scale-right mono-hide'>\r\n                {scaleTime(props.format)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventList;","import React from 'react';\r\n\r\nconst TimeRow = props => {\r\n    const HoursList = (format) => (\r\n        format ? [\r\n            0, 1, 2, 3, 4, 5, 6, 7,\r\n            8, 9, 10, 11, 12, 13, 14, 15,\r\n            16, 17, 18, 19, 20, 21, 22, 23\r\n        ] : [\r\n            1, 2, 3, 4, 5, 6, 7,\r\n            8, 9, 10, 11, 12\r\n    ]);\r\n    const toggleHour = () => {\r\n        props.menu === (props.field) ? \r\n            props.setMenu('') :\r\n            props.setMenu(props.field)\r\n    };\r\n    const getHour = (format, time) => {\r\n        return (format ?\r\n            (time - (time % 2)) / 2 : \r\n            (((time - (time % 2))/ 2) % 12 === 0 ? \r\n                12 : \r\n                ((time -(time % 2)) / 2) % 12)\r\n        );\r\n    };\r\n    const changeHour = (hour) => {\r\n        let newEvent = props.tempEvent;\r\n        newEvent[props.field] = \r\n            (props.format ? hour * 2 : hour) +\r\n            (props.tempEvent[props.field] % 2); \r\n        props.setUpcoming(newEvent);\r\n    };\r\n    const toggleMin = () => {    \r\n        props.setUpcoming(\r\n            (props.field === 'start') ?\r\n            { ...props.tempEvent,\r\n            start: (props.tempEvent.start % 2 === 0 ?\r\n                props.tempEvent.start + 1 % 48:\r\n                props.tempEvent.start - 1 % 48),\r\n            } :\r\n            { ...props.tempEvent,\r\n            end: (props.tempEvent.end % 2 === 0 ?\r\n                props.tempEvent.end + 1 % 48:\r\n                props.tempEvent.end - 1 % 48)\r\n            }\r\n        );\r\n    };\r\n    const toggleAM = () => {\r\n        props.setUpcoming(\r\n            (props.field === 'start' ? \r\n            { ...props.tempEvent,\r\n                start: (props.tempEvent.start + 24) % 48\r\n            } :\r\n            { ...props.tempEvent,\r\n                end: (props.tempEvent.end + 24) % 48\r\n            }\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className='time-items'>\r\n            <div className='drop-container'>\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={toggleHour}>\r\n                    {getHour(\r\n                        props.format, \r\n                        props.tempEvent[props.field]\r\n                    )}\r\n                </button>\r\n                {props.menu === (props.field) && (\r\n                    <ul className='dropdown wide'>\r\n                        {HoursList(props.format).map((hour) =>\r\n                            <button\r\n                                key={hour}\r\n                                className='drop-box square small'\r\n                                onClick={() => {\r\n                                    toggleHour();\r\n                                    changeHour(\r\n                                        props.format ?\r\n                                            hour :\r\n                                            (hour === 12 ? 0 : hour * 2) +\r\n                                            (props.hour < 24 ? 0 : 24)\r\n                                    );\r\n                                }}>\r\n                                {hour}\r\n                            </button>\r\n                        )}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n            <button\r\n                className='drop-box top-button square small'\r\n                onClick={() => toggleMin()}>\r\n                {props.tempEvent[props.field] % 2 === 0 ? '00' : '30'}\r\n            </button>                               \r\n            {!props.format &&\r\n                <button\r\n                    className='drop-box top-button square small'\r\n                    onClick={() => {toggleAM()}}>\r\n                    {(\r\n                        props.tempEvent[props.field] < 24 || \r\n                        props.tempEvent[props.field] === 48) ? \r\n                        'AM' : 'PM'\r\n                    }\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeRow;","import React from \"react\";\r\n\r\nconst ConfirmDialog = props => {\r\n    return ( <>\r\n        {props.isOpen && <>\r\n            <div\r\n                className='modal-bg'\r\n                style={{ zIndex: 14 }}\r\n                onClick={() => props.close()}>\r\n            </div>\r\n            <div className='dialog overlay confirm'>\r\n                <button\r\n                    onClick={() => props.close()}\r\n                    className='close-button'>\r\n                    &#10005;\r\n                </button>\r\n                <p className='warning'> Warning! </p>\r\n                <p> Are you sure you want to delete \r\n                    {props.allEvents ? \r\n                        ' all events?' : \r\n                        ' this event?'\r\n                    }\r\n                </p>\r\n                <button\r\n                    onClick={props.clickEvent}\r\n                    className='contrast thin-button'>\r\n                    {props.allEvents ? \r\n                    'Clear events' : \r\n                    'Delete event'}\r\n                </button>\r\n            </div>\r\n        </>}\r\n    </>\r\n    );\r\n};\r\n\r\nexport default ConfirmDialog;","import React, { useState } from 'react';\r\nimport TimeRow from './TimeRow';\r\nimport ConfirmDialog from './ConfirmDialog';\r\nimport { dayList } from './Data';\r\n\r\nconst EventDialog = props => {\r\n    const [menu, setMenu] = useState('');\r\n    const [confirm, setConfirm] = useState(false);\r\n    const toggleMenu = (name) => {\r\n        setMenu(menu === name ? '' : name);\r\n    };\r\n    const confirmDel = () => {\r\n        setConfirm(false);\r\n        props.deleteEvent();\r\n    };\r\n\r\n    return ( <>\r\n        {props.isOpen && <>\r\n            <div\r\n                className='modal-bg'\r\n                style={{ zIndex: 12 }}\r\n                onClick={() => props.setDialog('')}>\r\n            </div>\r\n            <div className='addevents overlay'>\r\n                <p className='header'>\r\n                    {props.type === 'add' ?\r\n                        'Add Event' :\r\n                        'Edit Event'\r\n                    }\r\n                </p>\r\n                <button\r\n                    onClick={() => props.setDialog('')}\r\n                    className='close-button'>\r\n                    &#10005;\r\n                </button>\r\n                <div className='text-container'>\r\n                    <p> Name of Event: </p>\r\n                    <input onChange={(event) => \r\n                        props.setUpcoming({\r\n                            ...props.tempEvent,\r\n                            title: event.target.value\r\n                        })}\r\n                        value={props.tempEvent.title}>\r\n                    </input>\r\n                </div>\r\n                <div className='row-items'>\r\n                    <button\r\n                        className='drop-box top-button square'\r\n                        onClick={() => \r\n                            setMenu(menu === 'day' ? \r\n                                '' : \r\n                                'day'\r\n                            )}>\r\n                        {props.tempEvent.day}\r\n                    </button>\r\n                    {menu === 'day' && (\r\n                        <ul className='dropdown'> \r\n                            {dayList.map((day) =>\r\n                                <button\r\n                                    hidden={day === \r\n                                        props.tempEvent.day\r\n                                    }\r\n                                    key={day}\r\n                                    className='drop-box square'\r\n                                    onClick={() => {\r\n                                        toggleMenu('day');\r\n                                        props.setUpcoming({\r\n                                            ...props.tempEvent,\r\n                                            day: day\r\n                                        });\r\n                                    }}>\r\n                                {day}\r\n                                </button>\r\n                            )}\r\n                        </ul>\r\n                    )}\r\n                    <TimeRow\r\n                        field={'start'}\r\n                        menu={menu}\r\n                        hour={\r\n                            props.tempEvent.start -\r\n                            (props.tempEvent.start % 2)\r\n                        }\r\n                        setMenu={setMenu}\r\n                        setUpcoming={props.setUpcoming}\r\n                        tempEvent={props.tempEvent}\r\n                        format={props.format}\r\n                    />\r\n                </div>\r\n                <TimeRow\r\n                    field={'end'}\r\n                    menu={menu}\r\n                    hour={\r\n                        props.tempEvent.end -\r\n                        (props.tempEvent.end % 2)\r\n                    }\r\n                    setMenu={setMenu}\r\n                    setUpcoming={props.setUpcoming}\r\n                    tempEvent={props.tempEvent}\r\n                    format={props.format}\r\n                />\r\n                { props.type === 'add' ?\r\n                    <button\r\n                        className='contrast-light thin-button'\r\n                        onClick={props.addEvent}>\r\n                        Add Event\r\n                    </button> :\r\n                    <>\r\n                        <button\r\n                            className='contrast-light thin-button'\r\n                            onClick={props.editEvent}>\r\n                            Edit Event\r\n                        </button>\r\n                        <button\r\n                            className='contrast thin-button'\r\n                            onClick={() => setConfirm(true)}>\r\n                            Delete Event\r\n                        </button>\r\n                    </>\r\n                }\r\n            </div>\r\n            <ConfirmDialog\r\n                allEvents={false}\r\n                isOpen={confirm}\r\n                close={() => setConfirm(false)}\r\n                clickEvent={confirmDel}/>\r\n        </>}\r\n    </>\r\n    );\r\n};\r\n\r\nexport default EventDialog;","import React, { useState } from 'react';\r\nimport ConfirmDialog from './ConfirmDialog';\r\nimport { colorNames, darkColors, range } from './Data';\r\n\r\nconst SettingsDialog = props => {\r\n    const [confirm, setConfirm] = useState(false);\r\n    const confirmDel = () => {\r\n        setConfirm(false);\r\n        props.clearEvents();\r\n    };\r\n\r\n    return ( <>\r\n        {props.isOpen && <>\r\n            <div\r\n                className='modal-bg'\r\n                style={{ zIndex: 12 }}\r\n                onClick={() => props.setDialog('')}>\r\n            </div>\r\n            <div className='settings overlay'>\r\n                <button\r\n                    onClick={() => props.setDialog('')}\r\n                    className='close-button'>\r\n                    &#10005;\r\n                </button>\r\n                <p className='header'> Settings </p>\r\n                <div className='settings-row'>\r\n                    <p> Use 24 Hour Time </p>\r\n                    <input\r\n                        type={'checkbox'}\r\n                        checked={props.format}\r\n                        onChange={props.toggleFormat}>\r\n                    </input>\r\n                </div>\r\n                <div className='settings-row'>\r\n                    <p> Accent Color: </p>\r\n                    <div className='color-palette'>\r\n                        {range(colorNames.length).map((n) =>\r\n                            <div\r\n                                key={n}\r\n                                style={{\r\n                                    backgroundColor: darkColors[n]\r\n                                }}\r\n                                className={\r\n                                    props.accentColor ===\r\n                                        colorNames[n] ?\r\n                                        'current-color' :\r\n                                        ''\r\n                                }\r\n                                checked={\r\n                                    props.accentColor ===\r\n                                    colorNames[n]\r\n                                }\r\n                                onClick={() =>\r\n                                    props.changeColor(n)\r\n                                }>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    className='contrast thin-button'\r\n                    onClick={() => setConfirm(true)}>\r\n                    Clear Events\r\n                </button>\r\n            </div>\r\n            <ConfirmDialog\r\n                allEvents={true}\r\n                isOpen={confirm}\r\n                close={() => setConfirm(false)}\r\n                clickEvent={confirmDel}/>\r\n        </>\r\n        }\r\n    \r\n    </>\r\n    );\r\n};\r\n\r\nexport default SettingsDialog;","import React from \"react\";\r\n\r\nconst WarningDialog = props => (\r\n    props.text &&\r\n        <>\r\n            <div\r\n                className='modal-bg'\r\n                style={{ zIndex: 14 }}\r\n                onClick={() => props.setWarning('')}>\r\n            </div>\r\n            <div className='dialog overlay confirm'>\r\n                <button\r\n                    onClick={() => props.setWarning('')}\r\n                    className='close-button'>\r\n                    &#10005;\r\n                </button>\r\n                <p className='warning'> Warning! </p>\r\n                {props.text}\r\n            </div>\r\n        </>\r\n);\r\n\r\nexport default WarningDialog;","import React from 'react';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { colorNames, dayList } from './Data';\r\nimport { lightColors, darkColors } from './Data';\r\nimport NavBar from './NavBar';\r\nimport EventList from './EventList';\r\nimport EventDialog from './EventDialog';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport WarningDialog from './WarningDialog';\r\n\r\nconst Calendar = () => {\r\n    // Loads events and settings from browser storage\r\n    let getList = localStorage.getItem('weeklies');\r\n    let getInfo = localStorage.getItem('weeklies-info');\r\n    const [events, setEvents] = useState(getList ?\r\n        JSON.parse(getList) : []\r\n    );\r\n    const [accent, setAccent] = useState(getInfo ?\r\n        JSON.parse(getInfo)['accent'] : 'orange'\r\n    );\r\n    const [format, setFormat] = useState(getInfo ?\r\n        JSON.parse(getInfo)['format'] : false\r\n    );\r\n    const [upcoming, setUpcoming] = useState({\r\n        title: '',\r\n        day: 'Sunday',\r\n        start: 0,\r\n        end: 0\r\n    });\r\n    const [oldid, setOldid] = useState(0);\r\n    const [dialog, setDialog] = useState('');\r\n    const [warning, setWarning] = useState('');\r\n    const [mono, setMono] = useState(0);\r\n\r\n    // Calculates event ID based on start time\r\n    // Returns the event with ID added\r\n    const addID = (event) => ({\r\n        ...event,\r\n        end: event.end === 0 ? 48 : event.end,\r\n        id: (dayList.indexOf(event.day) * 48) +\r\n            event.start\r\n    });\r\n\r\n    // Add upcoming event to calendar\r\n    const addEvent = () => {\r\n        let newList = events;\r\n        if (parseEvent(upcoming, events)) {\r\n            newList.push(addID(upcoming));\r\n            newList.sort((a, b) => a.id - b.id);\r\n            updateEvents(newList);\r\n        }\r\n    };\r\n\r\n    // Edit existing event in calendar\r\n    // Removes old event and adds in new one\r\n    const editEvent = () => {\r\n        let newList = events.filter(\r\n            event => event.id !== oldid\r\n        );\r\n        if (parseEvent(upcoming, newList)) {\r\n            newList.push(addID(upcoming));\r\n            newList.sort((a, b) => a.id - b.id);\r\n            updateEvents(newList);\r\n        }\r\n    };\r\n\r\n    // Remove event from calendar\r\n    // Uses local id saved of last event clicked\r\n    const deleteEvent = () => {\r\n        let newList = events.filter(\r\n            event => event.id !== oldid\r\n        );\r\n        updateEvents(newList);\r\n    };\r\n\r\n    // Helper method that verifies an event can be added\r\n    // Validates arguments and checks for overlaps\r\n    const parseEvent = (event, list) => {\r\n        if (!event.title || event.title.length === 0) {\r\n            setWarning('Event title cannot be empty!');\r\n            return false;\r\n        };\r\n        if ((event.start > event.end && \r\n            event.end !== 0) ||\r\n            event.start === event.end) {\r\n            setWarning('Invalid event duration!');\r\n            return false;\r\n        };\r\n        if (list.some(\r\n            curr =>\r\n            ((curr.day === event.day) &&\r\n                ((curr.start === event.start ||\r\n                    curr.end === event.end) ||\r\n                    (curr.start < event.end &&\r\n                        curr.end > event.start) ||\r\n                    (curr.end > event.start &&\r\n                        curr.start < event.end)))\r\n        )) {\r\n            setWarning(\r\n                'Time overlaps with another event!'\r\n            );\r\n            return false;\r\n        };\r\n        return true;\r\n    };\r\n\r\n    // Helper method that updates events\r\n    // Saves new list of events to browser storage\r\n    const updateEvents = (list) => {\r\n        setEvents(list);\r\n        setDialog('');\r\n        localStorage.setItem(\r\n            'weeklies',\r\n            JSON.stringify(list)\r\n        );\r\n    };\r\n\r\n    // Imports event data for edit event dialog\r\n    const editUpcoming = (id) => {\r\n        let index = events.findIndex(\r\n            event => event.id === id\r\n        );\r\n        setOldid(id);\r\n        setUpcoming({\r\n            title: events[index].title,\r\n            day: events[index].day,\r\n            start: events[index].start,\r\n            end: events[index].end\r\n        });\r\n        setDialog('edit');\r\n    };\r\n\r\n    // Imports time data for add event dialog\r\n    const addUpcoming = (day, time) => {\r\n        setUpcoming({\r\n            title: '',\r\n            day: day,\r\n            start: time,\r\n            end: (time + 2) % 48\r\n        });\r\n        setDialog('add');\r\n    };\r\n\r\n    // Changes accent color and updates UI\r\n    const changeAccent = useCallback((index) => {\r\n        document.body.style.setProperty(\r\n            '--light-accent', lightColors[index]\r\n        );\r\n        document.body.style.setProperty(\r\n            '--dark-accent', darkColors[index]\r\n        );\r\n        setAccent(colorNames[index]);\r\n        localStorage.setItem(\r\n            'weeklies-info',\r\n            JSON.stringify({\r\n                accent: colorNames[index],\r\n                format: format\r\n            })\r\n        );\r\n    }, [format]);\r\n\r\n    // Toggles time format used\r\n    const changeFormat = () => {\r\n        setFormat(!format);\r\n        localStorage.setItem(\r\n            'weeklies-info',\r\n            JSON.stringify({\r\n                accent: accent,\r\n                format: !format\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {changeAccent(\r\n            colorNames.indexOf(accent)\r\n        )}, [accent, changeAccent]\r\n    );\r\n\r\n    return (\r\n        <div className='calendar'>\r\n            <NavBar\r\n                setDialog={setDialog}/>\r\n            <EventDialog\r\n                type={'add'}\r\n                addEvent={addEvent}\r\n                tempEvent={upcoming}\r\n                setUpcoming={setUpcoming}\r\n                isOpen={dialog === 'add'}\r\n                setDialog={setDialog}\r\n                format={format}/>\r\n            <EventDialog\r\n                type={'edit'}\r\n                addEvent={addEvent}\r\n                editEvent={editEvent}\r\n                deleteEvent={deleteEvent}\r\n                tempEvent={upcoming}\r\n                setUpcoming={setUpcoming}\r\n                isOpen={dialog === 'edit'}\r\n                setDialog={setDialog}\r\n                format={format}/>\r\n            <SettingsDialog\r\n                clearEvents={() => {updateEvents([]);}}\r\n                isOpen={dialog === 'settings'}\r\n                setDialog={setDialog}\r\n                accentColor={accent}\r\n                changeColor={changeAccent}\r\n                format={format}\r\n                toggleFormat={changeFormat}/>\r\n            <WarningDialog\r\n                text={warning}\r\n                setWarning={setWarning}/>\r\n            <EventList\r\n                allEvents={events}\r\n                addUpcoming={addUpcoming}\r\n                editUpcoming={editUpcoming}\r\n                monoDay={mono}\r\n                setMono={setMono}\r\n                setDialog={setDialog}\r\n                format={format}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;","import React from 'react';\r\nimport Calendar from './components/Calendar';\r\nimport './Modal.css';\r\nimport './index.css';\r\nimport './NavBar.css';\r\nimport './EventList.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Calendar></Calendar>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}